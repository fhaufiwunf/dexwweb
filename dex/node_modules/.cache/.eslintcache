[{"D:\\Code\\DEX\\dexwweb\\dex\\src\\index.js":"1","D:\\Code\\DEX\\dexwweb\\dex\\src\\App.js":"2","D:\\Code\\DEX\\dexwweb\\dex\\src\\components\\Swap.js":"3","D:\\Code\\DEX\\dexwweb\\dex\\src\\components\\Header.js":"4","D:\\Code\\DEX\\dexwweb\\dex\\src\\components\\Pool.js":"5"},{"size":748,"mtime":1717945453704,"results":"6","hashOfConfig":"7"},{"size":854,"mtime":1717944703876,"results":"8","hashOfConfig":"7"},{"size":3667,"mtime":1717825746011,"results":"9","hashOfConfig":"7"},{"size":978,"mtime":1717944843744,"results":"10","hashOfConfig":"7"},{"size":110,"mtime":1717940937927,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r0w0p7",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Code\\DEX\\dexwweb\\dex\\src\\index.js",[],[],"D:\\Code\\DEX\\dexwweb\\dex\\src\\App.js",[],[],"D:\\Code\\DEX\\dexwweb\\dex\\src\\components\\Swap.js",["29","30","31"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Input, Popover, Radio, Modal,message } from 'antd';\r\nimport {\r\n  AccountBookOutlined,\r\n  DownOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport tokenList from \"../tokenList.json\"\r\n\r\nfunction Swap() {\r\n    const [Slippage, setSlippage] = useState(2.5);\r\n    const [tokenOneAmount, setTokenOneAmount] = useState(null);\r\n    const [tokenTwoAmount, setTokentwoAmount] = useState(null);\r\n    const [tokenOne, setTokenOne] =useState(tokenList[0]);\r\n    const [tokenTwo, setTokenTwo] =useState(tokenList[1]);\r\n    const [isOpen, setIsOpen] =useState(false);\r\n    const [changeToken, setChangeToken] =useState(1);\r\n\r\n\r\n    function handleSlippageChange(e){\r\n      setSlippage(e.target.value);\r\n    }\r\n\r\n    function changeAmount(e){\r\n      setTokenOneAmount(e.target.value);\r\n    }\r\n\r\n    function switchToken(){\r\n      const one = tokenOne;\r\n      const two = tokenTwo;\r\n      setTokenOne(two);\r\n      setTokenTwo(one);\r\n\r\n    }\r\n\r\n    function openModal(asset){\r\n      setChangeToken(asset);\r\n      setIsOpen(true);\r\n    }\r\n\r\n    function modifyToken(i){\r\n      if (changeToken === 1){\r\n        setTokenOne(tokenList[i]);\r\n      } else{\r\n        setTokenTwo(tokenList[i]);\r\n      }\r\n      setIsOpen(false);\r\n      \r\n    }\r\n  \r\n    const settings =(\r\n      <>\r\n        <div>Slippage Tolerance</div>\r\n        <div>\r\n          <Radio.Group value ={Slippage} onChange ={handleSlippageChange}>\r\n            <Radio.Button value={0.5}>0.5%</Radio.Button>\r\n            <Radio.Button value={2.5}>2.5%</Radio.Button>\r\n            <Radio.Button value={5}>5.0%</Radio.Button>\r\n\r\n          </Radio.Group>\r\n        </div>\r\n      </>\r\n    )\r\n  \r\n  return (\r\n    <>\r\n    <Modal\r\n      open={isOpen}\r\n      footer={null}\r\n      onCancel={() => setIsOpen(false)}\r\n      title=\"Select a token\"\r\n    >\r\n      <div\r\n        className='modalContent'\r\n      >\r\n        {tokenList?.map((e,i)=>{\r\n          return(\r\n            <div\r\n              className='tokenChoice'\r\n              key ={i}\r\n              onClick={() => modifyToken(i)}\r\n            >\r\n              <img src={e.img} alt={e.ticker} className='tokenLogo'/>\r\n              <div className='tokenChoiceName'>\r\n                <div className='tokenName'>{e.name}</div>\r\n                <div className='tokenTicker'>{e.ticker}</div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          );\r\n        })}\r\n      </div>\r\n    </Modal>\r\n    <div className='tradeBox'>\r\n      <div className='tradeBoxHeader'>\r\n        <h4>swap</h4>\r\n        <Popover\r\n          content={settings}\r\n          title=\"setting\"\r\n          trigger=\"click\"\r\n          placement=\"bottomRight\"\r\n        >\r\n          <SettingOutlined className=\"cog\"/>\r\n        </Popover>\r\n        \r\n      </div>\r\n      <div className='inputs'>\r\n        <Input placeholder='0' value={tokenOneAmount} onChange={changeAmount}/>\r\n        <Input placeholder='0' value={tokenTwoAmount} disabled={true}/>\r\n        <div className='switchButton' onClick={switchToken}>\r\n          <AccountBookOutlined className='switchArrow'/>\r\n        </div>\r\n        <div className='assetOne' onClick={() =>openModal(1)}>\r\n          <img src={tokenOne.img} alt='assetOneLogo' className='assetLogo'/>\r\n          {tokenOne.ticker}\r\n          <DownOutlined/>\r\n        </div>\r\n        <div className='assetTwo' onClick={() =>openModal(2)}>\r\n          <img src={tokenTwo.img} alt='assetOneLogo' className='assetLogo'/>\r\n          {tokenTwo.ticker}\r\n          <DownOutlined/>\r\n        </div>\r\n      </div>\r\n      <div className='swapButton'  disabled ={!tokenOneAmount}>swap</div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Swap",[],"D:\\Code\\DEX\\dexwweb\\dex\\src\\components\\Header.js",[],[],"D:\\Code\\DEX\\dexwweb\\dex\\src\\components\\Pool.js",[],[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":26,"nodeType":"34","messageId":"35","endLine":1,"endColumn":35},{"ruleId":"32","severity":1,"message":"36","line":2,"column":39,"nodeType":"34","messageId":"35","endLine":2,"endColumn":46},{"ruleId":"32","severity":1,"message":"37","line":13,"column":28,"nodeType":"34","messageId":"35","endLine":13,"endColumn":45},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'setTokentwoAmount' is assigned a value but never used."]