{"ast":null,"code":"\"use strict\";\n\n/**********************************************\n *      DO NOT MODIFY THIS FILE MANUALLY      *\n *                                            *\n *  THIS FILE HAS BEEN COPIED FROM ast-spec.  *\n * ANY CHANGES WILL BE LOST ON THE NEXT BUILD *\n *                                            *\n *   MAKE CHANGES TO ast-spec AND THEN RUN    *\n *                 yarn build                 *\n **********************************************/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AST_TOKEN_TYPES = exports.AST_NODE_TYPES = void 0;\nvar AST_NODE_TYPES;\n(function (AST_NODE_TYPES) {\n  AST_NODE_TYPES[\"AccessorProperty\"] = \"AccessorProperty\";\n  AST_NODE_TYPES[\"ArrayExpression\"] = \"ArrayExpression\";\n  AST_NODE_TYPES[\"ArrayPattern\"] = \"ArrayPattern\";\n  AST_NODE_TYPES[\"ArrowFunctionExpression\"] = \"ArrowFunctionExpression\";\n  AST_NODE_TYPES[\"AssignmentExpression\"] = \"AssignmentExpression\";\n  AST_NODE_TYPES[\"AssignmentPattern\"] = \"AssignmentPattern\";\n  AST_NODE_TYPES[\"AwaitExpression\"] = \"AwaitExpression\";\n  AST_NODE_TYPES[\"BinaryExpression\"] = \"BinaryExpression\";\n  AST_NODE_TYPES[\"BlockStatement\"] = \"BlockStatement\";\n  AST_NODE_TYPES[\"BreakStatement\"] = \"BreakStatement\";\n  AST_NODE_TYPES[\"CallExpression\"] = \"CallExpression\";\n  AST_NODE_TYPES[\"CatchClause\"] = \"CatchClause\";\n  AST_NODE_TYPES[\"ChainExpression\"] = \"ChainExpression\";\n  AST_NODE_TYPES[\"ClassBody\"] = \"ClassBody\";\n  AST_NODE_TYPES[\"ClassDeclaration\"] = \"ClassDeclaration\";\n  AST_NODE_TYPES[\"ClassExpression\"] = \"ClassExpression\";\n  AST_NODE_TYPES[\"ConditionalExpression\"] = \"ConditionalExpression\";\n  AST_NODE_TYPES[\"ContinueStatement\"] = \"ContinueStatement\";\n  AST_NODE_TYPES[\"DebuggerStatement\"] = \"DebuggerStatement\";\n  AST_NODE_TYPES[\"Decorator\"] = \"Decorator\";\n  AST_NODE_TYPES[\"DoWhileStatement\"] = \"DoWhileStatement\";\n  AST_NODE_TYPES[\"EmptyStatement\"] = \"EmptyStatement\";\n  AST_NODE_TYPES[\"ExportAllDeclaration\"] = \"ExportAllDeclaration\";\n  AST_NODE_TYPES[\"ExportDefaultDeclaration\"] = \"ExportDefaultDeclaration\";\n  AST_NODE_TYPES[\"ExportNamedDeclaration\"] = \"ExportNamedDeclaration\";\n  AST_NODE_TYPES[\"ExportSpecifier\"] = \"ExportSpecifier\";\n  AST_NODE_TYPES[\"ExpressionStatement\"] = \"ExpressionStatement\";\n  AST_NODE_TYPES[\"ForInStatement\"] = \"ForInStatement\";\n  AST_NODE_TYPES[\"ForOfStatement\"] = \"ForOfStatement\";\n  AST_NODE_TYPES[\"ForStatement\"] = \"ForStatement\";\n  AST_NODE_TYPES[\"FunctionDeclaration\"] = \"FunctionDeclaration\";\n  AST_NODE_TYPES[\"FunctionExpression\"] = \"FunctionExpression\";\n  AST_NODE_TYPES[\"Identifier\"] = \"Identifier\";\n  AST_NODE_TYPES[\"IfStatement\"] = \"IfStatement\";\n  AST_NODE_TYPES[\"ImportAttribute\"] = \"ImportAttribute\";\n  AST_NODE_TYPES[\"ImportDeclaration\"] = \"ImportDeclaration\";\n  AST_NODE_TYPES[\"ImportDefaultSpecifier\"] = \"ImportDefaultSpecifier\";\n  AST_NODE_TYPES[\"ImportExpression\"] = \"ImportExpression\";\n  AST_NODE_TYPES[\"ImportNamespaceSpecifier\"] = \"ImportNamespaceSpecifier\";\n  AST_NODE_TYPES[\"ImportSpecifier\"] = \"ImportSpecifier\";\n  AST_NODE_TYPES[\"JSXAttribute\"] = \"JSXAttribute\";\n  AST_NODE_TYPES[\"JSXClosingElement\"] = \"JSXClosingElement\";\n  AST_NODE_TYPES[\"JSXClosingFragment\"] = \"JSXClosingFragment\";\n  AST_NODE_TYPES[\"JSXElement\"] = \"JSXElement\";\n  AST_NODE_TYPES[\"JSXEmptyExpression\"] = \"JSXEmptyExpression\";\n  AST_NODE_TYPES[\"JSXExpressionContainer\"] = \"JSXExpressionContainer\";\n  AST_NODE_TYPES[\"JSXFragment\"] = \"JSXFragment\";\n  AST_NODE_TYPES[\"JSXIdentifier\"] = \"JSXIdentifier\";\n  AST_NODE_TYPES[\"JSXMemberExpression\"] = \"JSXMemberExpression\";\n  AST_NODE_TYPES[\"JSXNamespacedName\"] = \"JSXNamespacedName\";\n  AST_NODE_TYPES[\"JSXOpeningElement\"] = \"JSXOpeningElement\";\n  AST_NODE_TYPES[\"JSXOpeningFragment\"] = \"JSXOpeningFragment\";\n  AST_NODE_TYPES[\"JSXSpreadAttribute\"] = \"JSXSpreadAttribute\";\n  AST_NODE_TYPES[\"JSXSpreadChild\"] = \"JSXSpreadChild\";\n  AST_NODE_TYPES[\"JSXText\"] = \"JSXText\";\n  AST_NODE_TYPES[\"LabeledStatement\"] = \"LabeledStatement\";\n  AST_NODE_TYPES[\"Literal\"] = \"Literal\";\n  AST_NODE_TYPES[\"LogicalExpression\"] = \"LogicalExpression\";\n  AST_NODE_TYPES[\"MemberExpression\"] = \"MemberExpression\";\n  AST_NODE_TYPES[\"MetaProperty\"] = \"MetaProperty\";\n  AST_NODE_TYPES[\"MethodDefinition\"] = \"MethodDefinition\";\n  AST_NODE_TYPES[\"NewExpression\"] = \"NewExpression\";\n  AST_NODE_TYPES[\"ObjectExpression\"] = \"ObjectExpression\";\n  AST_NODE_TYPES[\"ObjectPattern\"] = \"ObjectPattern\";\n  AST_NODE_TYPES[\"PrivateIdentifier\"] = \"PrivateIdentifier\";\n  AST_NODE_TYPES[\"Program\"] = \"Program\";\n  AST_NODE_TYPES[\"Property\"] = \"Property\";\n  AST_NODE_TYPES[\"PropertyDefinition\"] = \"PropertyDefinition\";\n  AST_NODE_TYPES[\"RestElement\"] = \"RestElement\";\n  AST_NODE_TYPES[\"ReturnStatement\"] = \"ReturnStatement\";\n  AST_NODE_TYPES[\"SequenceExpression\"] = \"SequenceExpression\";\n  AST_NODE_TYPES[\"SpreadElement\"] = \"SpreadElement\";\n  AST_NODE_TYPES[\"StaticBlock\"] = \"StaticBlock\";\n  AST_NODE_TYPES[\"Super\"] = \"Super\";\n  AST_NODE_TYPES[\"SwitchCase\"] = \"SwitchCase\";\n  AST_NODE_TYPES[\"SwitchStatement\"] = \"SwitchStatement\";\n  AST_NODE_TYPES[\"TaggedTemplateExpression\"] = \"TaggedTemplateExpression\";\n  AST_NODE_TYPES[\"TemplateElement\"] = \"TemplateElement\";\n  AST_NODE_TYPES[\"TemplateLiteral\"] = \"TemplateLiteral\";\n  AST_NODE_TYPES[\"ThisExpression\"] = \"ThisExpression\";\n  AST_NODE_TYPES[\"ThrowStatement\"] = \"ThrowStatement\";\n  AST_NODE_TYPES[\"TryStatement\"] = \"TryStatement\";\n  AST_NODE_TYPES[\"UnaryExpression\"] = \"UnaryExpression\";\n  AST_NODE_TYPES[\"UpdateExpression\"] = \"UpdateExpression\";\n  AST_NODE_TYPES[\"VariableDeclaration\"] = \"VariableDeclaration\";\n  AST_NODE_TYPES[\"VariableDeclarator\"] = \"VariableDeclarator\";\n  AST_NODE_TYPES[\"WhileStatement\"] = \"WhileStatement\";\n  AST_NODE_TYPES[\"WithStatement\"] = \"WithStatement\";\n  AST_NODE_TYPES[\"YieldExpression\"] = \"YieldExpression\";\n  /**\n   * TS-prefixed nodes\n   */\n  AST_NODE_TYPES[\"TSAbstractAccessorProperty\"] = \"TSAbstractAccessorProperty\";\n  AST_NODE_TYPES[\"TSAbstractKeyword\"] = \"TSAbstractKeyword\";\n  AST_NODE_TYPES[\"TSAbstractMethodDefinition\"] = \"TSAbstractMethodDefinition\";\n  AST_NODE_TYPES[\"TSAbstractPropertyDefinition\"] = \"TSAbstractPropertyDefinition\";\n  AST_NODE_TYPES[\"TSAnyKeyword\"] = \"TSAnyKeyword\";\n  AST_NODE_TYPES[\"TSArrayType\"] = \"TSArrayType\";\n  AST_NODE_TYPES[\"TSAsExpression\"] = \"TSAsExpression\";\n  AST_NODE_TYPES[\"TSAsyncKeyword\"] = \"TSAsyncKeyword\";\n  AST_NODE_TYPES[\"TSBigIntKeyword\"] = \"TSBigIntKeyword\";\n  AST_NODE_TYPES[\"TSBooleanKeyword\"] = \"TSBooleanKeyword\";\n  AST_NODE_TYPES[\"TSCallSignatureDeclaration\"] = \"TSCallSignatureDeclaration\";\n  AST_NODE_TYPES[\"TSClassImplements\"] = \"TSClassImplements\";\n  AST_NODE_TYPES[\"TSConditionalType\"] = \"TSConditionalType\";\n  AST_NODE_TYPES[\"TSConstructorType\"] = \"TSConstructorType\";\n  AST_NODE_TYPES[\"TSConstructSignatureDeclaration\"] = \"TSConstructSignatureDeclaration\";\n  AST_NODE_TYPES[\"TSDeclareFunction\"] = \"TSDeclareFunction\";\n  AST_NODE_TYPES[\"TSDeclareKeyword\"] = \"TSDeclareKeyword\";\n  AST_NODE_TYPES[\"TSEmptyBodyFunctionExpression\"] = \"TSEmptyBodyFunctionExpression\";\n  AST_NODE_TYPES[\"TSEnumDeclaration\"] = \"TSEnumDeclaration\";\n  AST_NODE_TYPES[\"TSEnumMember\"] = \"TSEnumMember\";\n  AST_NODE_TYPES[\"TSExportAssignment\"] = \"TSExportAssignment\";\n  AST_NODE_TYPES[\"TSExportKeyword\"] = \"TSExportKeyword\";\n  AST_NODE_TYPES[\"TSExternalModuleReference\"] = \"TSExternalModuleReference\";\n  AST_NODE_TYPES[\"TSFunctionType\"] = \"TSFunctionType\";\n  AST_NODE_TYPES[\"TSInstantiationExpression\"] = \"TSInstantiationExpression\";\n  AST_NODE_TYPES[\"TSImportEqualsDeclaration\"] = \"TSImportEqualsDeclaration\";\n  AST_NODE_TYPES[\"TSImportType\"] = \"TSImportType\";\n  AST_NODE_TYPES[\"TSIndexedAccessType\"] = \"TSIndexedAccessType\";\n  AST_NODE_TYPES[\"TSIndexSignature\"] = \"TSIndexSignature\";\n  AST_NODE_TYPES[\"TSInferType\"] = \"TSInferType\";\n  AST_NODE_TYPES[\"TSInterfaceBody\"] = \"TSInterfaceBody\";\n  AST_NODE_TYPES[\"TSInterfaceDeclaration\"] = \"TSInterfaceDeclaration\";\n  AST_NODE_TYPES[\"TSInterfaceHeritage\"] = \"TSInterfaceHeritage\";\n  AST_NODE_TYPES[\"TSIntersectionType\"] = \"TSIntersectionType\";\n  AST_NODE_TYPES[\"TSIntrinsicKeyword\"] = \"TSIntrinsicKeyword\";\n  AST_NODE_TYPES[\"TSLiteralType\"] = \"TSLiteralType\";\n  AST_NODE_TYPES[\"TSMappedType\"] = \"TSMappedType\";\n  AST_NODE_TYPES[\"TSMethodSignature\"] = \"TSMethodSignature\";\n  AST_NODE_TYPES[\"TSModuleBlock\"] = \"TSModuleBlock\";\n  AST_NODE_TYPES[\"TSModuleDeclaration\"] = \"TSModuleDeclaration\";\n  AST_NODE_TYPES[\"TSNamedTupleMember\"] = \"TSNamedTupleMember\";\n  AST_NODE_TYPES[\"TSNamespaceExportDeclaration\"] = \"TSNamespaceExportDeclaration\";\n  AST_NODE_TYPES[\"TSNeverKeyword\"] = \"TSNeverKeyword\";\n  AST_NODE_TYPES[\"TSNonNullExpression\"] = \"TSNonNullExpression\";\n  AST_NODE_TYPES[\"TSNullKeyword\"] = \"TSNullKeyword\";\n  AST_NODE_TYPES[\"TSNumberKeyword\"] = \"TSNumberKeyword\";\n  AST_NODE_TYPES[\"TSObjectKeyword\"] = \"TSObjectKeyword\";\n  AST_NODE_TYPES[\"TSOptionalType\"] = \"TSOptionalType\";\n  AST_NODE_TYPES[\"TSParameterProperty\"] = \"TSParameterProperty\";\n  AST_NODE_TYPES[\"TSPrivateKeyword\"] = \"TSPrivateKeyword\";\n  AST_NODE_TYPES[\"TSPropertySignature\"] = \"TSPropertySignature\";\n  AST_NODE_TYPES[\"TSProtectedKeyword\"] = \"TSProtectedKeyword\";\n  AST_NODE_TYPES[\"TSPublicKeyword\"] = \"TSPublicKeyword\";\n  AST_NODE_TYPES[\"TSQualifiedName\"] = \"TSQualifiedName\";\n  AST_NODE_TYPES[\"TSReadonlyKeyword\"] = \"TSReadonlyKeyword\";\n  AST_NODE_TYPES[\"TSRestType\"] = \"TSRestType\";\n  AST_NODE_TYPES[\"TSSatisfiesExpression\"] = \"TSSatisfiesExpression\";\n  AST_NODE_TYPES[\"TSStaticKeyword\"] = \"TSStaticKeyword\";\n  AST_NODE_TYPES[\"TSStringKeyword\"] = \"TSStringKeyword\";\n  AST_NODE_TYPES[\"TSSymbolKeyword\"] = \"TSSymbolKeyword\";\n  AST_NODE_TYPES[\"TSTemplateLiteralType\"] = \"TSTemplateLiteralType\";\n  AST_NODE_TYPES[\"TSThisType\"] = \"TSThisType\";\n  AST_NODE_TYPES[\"TSTupleType\"] = \"TSTupleType\";\n  AST_NODE_TYPES[\"TSTypeAliasDeclaration\"] = \"TSTypeAliasDeclaration\";\n  AST_NODE_TYPES[\"TSTypeAnnotation\"] = \"TSTypeAnnotation\";\n  AST_NODE_TYPES[\"TSTypeAssertion\"] = \"TSTypeAssertion\";\n  AST_NODE_TYPES[\"TSTypeLiteral\"] = \"TSTypeLiteral\";\n  AST_NODE_TYPES[\"TSTypeOperator\"] = \"TSTypeOperator\";\n  AST_NODE_TYPES[\"TSTypeParameter\"] = \"TSTypeParameter\";\n  AST_NODE_TYPES[\"TSTypeParameterDeclaration\"] = \"TSTypeParameterDeclaration\";\n  AST_NODE_TYPES[\"TSTypeParameterInstantiation\"] = \"TSTypeParameterInstantiation\";\n  AST_NODE_TYPES[\"TSTypePredicate\"] = \"TSTypePredicate\";\n  AST_NODE_TYPES[\"TSTypeQuery\"] = \"TSTypeQuery\";\n  AST_NODE_TYPES[\"TSTypeReference\"] = \"TSTypeReference\";\n  AST_NODE_TYPES[\"TSUndefinedKeyword\"] = \"TSUndefinedKeyword\";\n  AST_NODE_TYPES[\"TSUnionType\"] = \"TSUnionType\";\n  AST_NODE_TYPES[\"TSUnknownKeyword\"] = \"TSUnknownKeyword\";\n  AST_NODE_TYPES[\"TSVoidKeyword\"] = \"TSVoidKeyword\";\n})(AST_NODE_TYPES || (exports.AST_NODE_TYPES = AST_NODE_TYPES = {}));\nvar AST_TOKEN_TYPES;\n(function (AST_TOKEN_TYPES) {\n  AST_TOKEN_TYPES[\"Boolean\"] = \"Boolean\";\n  AST_TOKEN_TYPES[\"Identifier\"] = \"Identifier\";\n  AST_TOKEN_TYPES[\"JSXIdentifier\"] = \"JSXIdentifier\";\n  AST_TOKEN_TYPES[\"JSXText\"] = \"JSXText\";\n  AST_TOKEN_TYPES[\"Keyword\"] = \"Keyword\";\n  AST_TOKEN_TYPES[\"Null\"] = \"Null\";\n  AST_TOKEN_TYPES[\"Numeric\"] = \"Numeric\";\n  AST_TOKEN_TYPES[\"Punctuator\"] = \"Punctuator\";\n  AST_TOKEN_TYPES[\"RegularExpression\"] = \"RegularExpression\";\n  AST_TOKEN_TYPES[\"String\"] = \"String\";\n  AST_TOKEN_TYPES[\"Template\"] = \"Template\";\n  AST_TOKEN_TYPES[\"Block\"] = \"Block\";\n  AST_TOKEN_TYPES[\"Line\"] = \"Line\";\n})(AST_TOKEN_TYPES || (exports.AST_TOKEN_TYPES = AST_TOKEN_TYPES = {}));","map":{"version":3,"mappings":"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","names":["AST_NODE_TYPES","AST_TOKEN_TYPES"],"sources":["../../src/generated/ast-spec.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}