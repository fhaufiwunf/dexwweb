{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLanguageVariant = exports.getScriptKind = void 0;\nconst path_1 = __importDefault(require(\"path\"));\nconst ts = __importStar(require(\"typescript\"));\nfunction getScriptKind(filePath, jsx) {\n  const extension = path_1.default.extname(filePath).toLowerCase();\n  // note - we only respect the user's jsx setting for unknown extensions\n  // this is so that we always match TS's internal script kind logic, preventing\n  // weird errors due to a mismatch.\n  // https://github.com/microsoft/TypeScript/blob/da00ba67ed1182ad334f7c713b8254fba174aeba/src/compiler/utilities.ts#L6948-L6968\n  switch (extension) {\n    case ts.Extension.Js:\n    case ts.Extension.Cjs:\n    case ts.Extension.Mjs:\n      return ts.ScriptKind.JS;\n    case ts.Extension.Jsx:\n      return ts.ScriptKind.JSX;\n    case ts.Extension.Ts:\n    case ts.Extension.Cts:\n    case ts.Extension.Mts:\n      return ts.ScriptKind.TS;\n    case ts.Extension.Tsx:\n      return ts.ScriptKind.TSX;\n    case ts.Extension.Json:\n      return ts.ScriptKind.JSON;\n    default:\n      // unknown extension, force typescript to ignore the file extension, and respect the user's setting\n      return jsx ? ts.ScriptKind.TSX : ts.ScriptKind.TS;\n  }\n}\nexports.getScriptKind = getScriptKind;\nfunction getLanguageVariant(scriptKind) {\n  // https://github.com/microsoft/TypeScript/blob/d6e483b8dabd8fd37c00954c3f2184bb7f1eb90c/src/compiler/utilities.ts#L6281-L6285\n  switch (scriptKind) {\n    case ts.ScriptKind.TSX:\n    case ts.ScriptKind.JSX:\n    case ts.ScriptKind.JS:\n    case ts.ScriptKind.JSON:\n      return ts.LanguageVariant.JSX;\n    default:\n      return ts.LanguageVariant.Standard;\n  }\n}\nexports.getLanguageVariant = getLanguageVariant;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA,SAASA,aAAaA,CAACC,QAAgB,EAAEC,GAAY;EACnD,MAAMC,SAAS,GAAGC,cAAI,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAACK,WAAW,EAAE;EACtD;EACA;EACA;EACA;EACA,QAAQH,SAAS;IACf,KAAKI,EAAE,CAACC,SAAS,CAACC,EAAE;IACpB,KAAKF,EAAE,CAACC,SAAS,CAACE,GAAG;IACrB,KAAKH,EAAE,CAACC,SAAS,CAACG,GAAG;MACnB,OAAOJ,EAAE,CAACK,UAAU,CAACC,EAAE;IAEzB,KAAKN,EAAE,CAACC,SAAS,CAACM,GAAG;MACnB,OAAOP,EAAE,CAACK,UAAU,CAACG,GAAG;IAE1B,KAAKR,EAAE,CAACC,SAAS,CAACQ,EAAE;IACpB,KAAKT,EAAE,CAACC,SAAS,CAACS,GAAG;IACrB,KAAKV,EAAE,CAACC,SAAS,CAACU,GAAG;MACnB,OAAOX,EAAE,CAACK,UAAU,CAACO,EAAE;IAEzB,KAAKZ,EAAE,CAACC,SAAS,CAACY,GAAG;MACnB,OAAOb,EAAE,CAACK,UAAU,CAACS,GAAG;IAE1B,KAAKd,EAAE,CAACC,SAAS,CAACc,IAAI;MACpB,OAAOf,EAAE,CAACK,UAAU,CAACW,IAAI;IAE3B;MACE;MACA,OAAOrB,GAAG,GAAGK,EAAE,CAACK,UAAU,CAACS,GAAG,GAAGd,EAAE,CAACK,UAAU,CAACO,EAAE;;AAEvD;AAgBSK;AAdT,SAASC,kBAAkBA,CAACC,UAAyB;EACnD;EACA,QAAQA,UAAU;IAChB,KAAKnB,EAAE,CAACK,UAAU,CAACS,GAAG;IACtB,KAAKd,EAAE,CAACK,UAAU,CAACG,GAAG;IACtB,KAAKR,EAAE,CAACK,UAAU,CAACC,EAAE;IACrB,KAAKN,EAAE,CAACK,UAAU,CAACW,IAAI;MACrB,OAAOhB,EAAE,CAACoB,eAAe,CAACZ,GAAG;IAE/B;MACE,OAAOR,EAAE,CAACoB,eAAe,CAACC,QAAQ;;AAExC;AAEwBJ","names":["getScriptKind","filePath","jsx","extension","path_1","extname","toLowerCase","ts","Extension","Js","Cjs","Mjs","ScriptKind","JS","Jsx","JSX","Ts","Cts","Mts","TS","Tsx","TSX","Json","JSON","exports","getLanguageVariant","scriptKind","LanguageVariant","Standard"],"sources":["../../src/create-program/getScriptKind.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}