{"ast":null,"code":"import { InjectedConnector } from \"./chunk-YUNHZJBB.js\";\nimport { __privateAdd, __privateGet, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\";\n\n// src/metaMask.ts\nimport { ConnectorNotFoundError, ResourceUnavailableError, UserRejectedRequestError, getClient } from \"@wagmi/core\";\nimport { getAddress } from \"ethers/lib/utils.js\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends InjectedConnector {\n  constructor() {\n    let {\n      chains,\n      options: options_\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider() {\n        function getReady(ethereum) {\n          const isMetaMask = !!ethereum?.isMetaMask;\n          if (!isMetaMask) return;\n          if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) return;\n          if (ethereum.isAvalanche) return;\n          if (ethereum.isKuCoinWallet) return;\n          if (ethereum.isPortal) return;\n          if (ethereum.isTokenPocket) return;\n          if (ethereum.isTokenary) return;\n          return ethereum;\n        }\n        if (typeof window === \"undefined\") return;\n        if (window.ethereum?.providers) return window.ethereum.providers.find(getReady);\n        return getReady(window.ethereum);\n      },\n      ...options_\n    };\n    super({\n      chains,\n      options\n    });\n    __publicField(this, \"id\", \"metaMask\");\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      let account = null;\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected) try {\n          await provider.request({\n            method: \"wallet_requestPermissions\",\n            params: [{\n              eth_accounts: {}\n            }]\n          });\n          account = await this.getAccount();\n        } catch (error) {\n          if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n        }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = getAddress(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect) getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport { MetaMaskConnector };","map":{"version":3,"names":["InjectedConnector","__privateAdd","__privateGet","__privateSet","__publicField","ConnectorNotFoundError","ResourceUnavailableError","UserRejectedRequestError","getClient","getAddress","_UNSTABLE_shimOnConnectSelectAccount","MetaMaskConnector","constructor","chains","options","options_","arguments","length","undefined","name","shimDisconnect","shimChainChangedDisconnect","getProvider","getReady","ethereum","isMetaMask","isBraveWallet","_events","_state","isAvalanche","isKuCoinWallet","isPortal","isTokenPocket","isTokenary","window","providers","find","UNSTABLE_shimOnConnectSelectAccount","connect","chainId","provider","on","onAccountsChanged","onChainChanged","onDisconnect","emit","type","account","storage","getItem","shimDisconnectKey","getAccount","catch","isConnected","request","method","params","eth_accounts","error","isUserRejectedRequestError","accounts","id","getChainId","unsupported","isChainUnsupported","chain","switchChain","setItem","code","WeakMap"],"sources":["D:/Code/DEX/dexwweb/dex/node_modules/@wagmi/connectors/dist/metaMask.js"],"sourcesContent":["import {\r\n  InjectedConnector\r\n} from \"./chunk-YUNHZJBB.js\";\r\nimport {\r\n  __privateAdd,\r\n  __privateGet,\r\n  __privateSet,\r\n  __publicField\r\n} from \"./chunk-5NCTPR6C.js\";\r\n\r\n// src/metaMask.ts\r\nimport {\r\n  ConnectorNotFoundError,\r\n  ResourceUnavailableError,\r\n  UserRejectedRequestError,\r\n  getClient\r\n} from \"@wagmi/core\";\r\nimport { getAddress } from \"ethers/lib/utils.js\";\r\nvar _UNSTABLE_shimOnConnectSelectAccount;\r\nvar MetaMaskConnector = class extends InjectedConnector {\r\n  constructor({\r\n    chains,\r\n    options: options_\r\n  } = {}) {\r\n    const options = {\r\n      name: \"MetaMask\",\r\n      shimDisconnect: true,\r\n      shimChainChangedDisconnect: true,\r\n      getProvider() {\r\n        function getReady(ethereum) {\r\n          const isMetaMask = !!ethereum?.isMetaMask;\r\n          if (!isMetaMask)\r\n            return;\r\n          if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state)\r\n            return;\r\n          if (ethereum.isAvalanche)\r\n            return;\r\n          if (ethereum.isKuCoinWallet)\r\n            return;\r\n          if (ethereum.isPortal)\r\n            return;\r\n          if (ethereum.isTokenPocket)\r\n            return;\r\n          if (ethereum.isTokenary)\r\n            return;\r\n          return ethereum;\r\n        }\r\n        if (typeof window === \"undefined\")\r\n          return;\r\n        if (window.ethereum?.providers)\r\n          return window.ethereum.providers.find(getReady);\r\n        return getReady(window.ethereum);\r\n      },\r\n      ...options_\r\n    };\r\n    super({ chains, options });\r\n    __publicField(this, \"id\", \"metaMask\");\r\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\r\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\r\n  }\r\n  async connect({ chainId } = {}) {\r\n    try {\r\n      const provider = await this.getProvider();\r\n      if (!provider)\r\n        throw new ConnectorNotFoundError();\r\n      if (provider.on) {\r\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\r\n        provider.on(\"chainChanged\", this.onChainChanged);\r\n        provider.on(\"disconnect\", this.onDisconnect);\r\n      }\r\n      this.emit(\"message\", { type: \"connecting\" });\r\n      let account = null;\r\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey)) {\r\n        account = await this.getAccount().catch(() => null);\r\n        const isConnected = !!account;\r\n        if (isConnected)\r\n          try {\r\n            await provider.request({\r\n              method: \"wallet_requestPermissions\",\r\n              params: [{ eth_accounts: {} }]\r\n            });\r\n            account = await this.getAccount();\r\n          } catch (error) {\r\n            if (this.isUserRejectedRequestError(error))\r\n              throw new UserRejectedRequestError(error);\r\n          }\r\n      }\r\n      if (!account) {\r\n        const accounts = await provider.request({\r\n          method: \"eth_requestAccounts\"\r\n        });\r\n        account = getAddress(accounts[0]);\r\n      }\r\n      let id = await this.getChainId();\r\n      let unsupported = this.isChainUnsupported(id);\r\n      if (chainId && id !== chainId) {\r\n        const chain = await this.switchChain(chainId);\r\n        id = chain.id;\r\n        unsupported = this.isChainUnsupported(id);\r\n      }\r\n      if (this.options?.shimDisconnect)\r\n        getClient().storage?.setItem(this.shimDisconnectKey, true);\r\n      return { account, chain: { id, unsupported }, provider };\r\n    } catch (error) {\r\n      if (this.isUserRejectedRequestError(error))\r\n        throw new UserRejectedRequestError(error);\r\n      if (error.code === -32002)\r\n        throw new ResourceUnavailableError(error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\r\nexport {\r\n  MetaMaskConnector\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}