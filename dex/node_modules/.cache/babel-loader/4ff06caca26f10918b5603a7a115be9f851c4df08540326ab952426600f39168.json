{"ast":null,"code":"'use strict';\n\nconst resolve = require('resolve/sync');\nconst isCoreModule = require('is-core-module');\nconst path = require('path');\nconst log = require('debug')('eslint-plugin-import:resolver:node');\nexports.interfaceVersion = 2;\nexports.resolve = function (source, file, config) {\n  log('Resolving:', source, 'from:', file);\n  let resolvedPath;\n  if (isCoreModule(source)) {\n    log('resolved to core');\n    return {\n      found: true,\n      path: null\n    };\n  }\n  try {\n    const cachedFilter = function (pkg, dir) {\n      return packageFilter(pkg, dir, config);\n    };\n    resolvedPath = resolve(source, opts(file, config, cachedFilter));\n    log('Resolved to:', resolvedPath);\n    return {\n      found: true,\n      path: resolvedPath\n    };\n  } catch (err) {\n    log('resolve threw error:', err);\n    return {\n      found: false\n    };\n  }\n};\nfunction opts(file, config, packageFilter) {\n  return Object.assign({\n    // more closely matches Node (#333)\n    // plus 'mjs' for native modules! (#939)\n    extensions: ['.mjs', '.js', '.json', '.node']\n  }, config, {\n    // path.resolve will handle paths relative to CWD\n    basedir: path.dirname(path.resolve(file)),\n    packageFilter\n  });\n}\nfunction identity(x) {\n  return x;\n}\nfunction packageFilter(pkg, dir, config) {\n  let found = false;\n  const file = path.join(dir, 'dummy.js');\n  if (pkg.module) {\n    try {\n      resolve(String(pkg.module).replace(/^(?:\\.\\/)?/, './'), opts(file, config, identity));\n      pkg.main = pkg.module;\n      found = true;\n    } catch (err) {\n      log('resolve threw error trying to find pkg.module:', err);\n    }\n  }\n  if (!found && pkg['jsnext:main']) {\n    try {\n      resolve(String(pkg['jsnext:main']).replace(/^(?:\\.\\/)?/, './'), opts(file, config, identity));\n      pkg.main = pkg['jsnext:main'];\n      found = true;\n    } catch (err) {\n      log('resolve threw error trying to find pkg[\\'jsnext:main\\']:', err);\n    }\n  }\n  return pkg;\n}","map":{"version":3,"names":["resolve","require","isCoreModule","path","log","exports","interfaceVersion","source","file","config","resolvedPath","found","cachedFilter","pkg","dir","packageFilter","opts","err","Object","assign","extensions","basedir","dirname","identity","x","join","module","String","replace","main"],"sources":["C:/Users/ADMIN/node_modules/eslint-import-resolver-node/index.js"],"sourcesContent":["'use strict';\n\nconst resolve = require('resolve/sync');\nconst isCoreModule = require('is-core-module');\nconst path = require('path');\n\nconst log = require('debug')('eslint-plugin-import:resolver:node');\n\nexports.interfaceVersion = 2;\n\nexports.resolve = function (source, file, config) {\n  log('Resolving:', source, 'from:', file);\n  let resolvedPath;\n\n  if (isCoreModule(source)) {\n    log('resolved to core');\n    return { found: true, path: null };\n  }\n\n  try {\n    const cachedFilter = function (pkg, dir) { return packageFilter(pkg, dir, config); };\n    resolvedPath = resolve(source, opts(file, config, cachedFilter));\n    log('Resolved to:', resolvedPath);\n    return { found: true, path: resolvedPath };\n  } catch (err) {\n    log('resolve threw error:', err);\n    return { found: false };\n  }\n};\n\nfunction opts(file, config, packageFilter) {\n  return Object.assign({ // more closely matches Node (#333)\n    // plus 'mjs' for native modules! (#939)\n    extensions: ['.mjs', '.js', '.json', '.node'],\n  }, config, {\n    // path.resolve will handle paths relative to CWD\n    basedir: path.dirname(path.resolve(file)),\n    packageFilter,\n  });\n}\n\nfunction identity(x) { return x; }\n\nfunction packageFilter(pkg, dir, config) {\n  let found = false;\n  const file = path.join(dir, 'dummy.js');\n  if (pkg.module) {\n    try {\n      resolve(String(pkg.module).replace(/^(?:\\.\\/)?/, './'), opts(file, config, identity));\n      pkg.main = pkg.module;\n      found = true;\n    } catch (err) {\n      log('resolve threw error trying to find pkg.module:', err);\n    }\n  }\n  if (!found && pkg['jsnext:main']) {\n    try {\n      resolve(String(pkg['jsnext:main']).replace(/^(?:\\.\\/)?/, './'), opts(file, config, identity));\n      pkg.main = pkg['jsnext:main'];\n      found = true;\n    } catch (err) {\n      log('resolve threw error trying to find pkg[\\'jsnext:main\\']:', err);\n    }\n  }\n  return pkg;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,cAAc,CAAC;AACvC,MAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMG,GAAG,GAAGH,OAAO,CAAC,OAAO,CAAC,CAAC,oCAAoC,CAAC;AAElEI,OAAO,CAACC,gBAAgB,GAAG,CAAC;AAE5BD,OAAO,CAACL,OAAO,GAAG,UAAUO,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAE;EAChDL,GAAG,CAAC,YAAY,EAAEG,MAAM,EAAE,OAAO,EAAEC,IAAI,CAAC;EACxC,IAAIE,YAAY;EAEhB,IAAIR,YAAY,CAACK,MAAM,CAAC,EAAE;IACxBH,GAAG,CAAC,kBAAkB,CAAC;IACvB,OAAO;MAAEO,KAAK,EAAE,IAAI;MAAER,IAAI,EAAE;IAAK,CAAC;EACpC;EAEA,IAAI;IACF,MAAMS,YAAY,GAAG,SAAAA,CAAUC,GAAG,EAAEC,GAAG,EAAE;MAAE,OAAOC,aAAa,CAACF,GAAG,EAAEC,GAAG,EAAEL,MAAM,CAAC;IAAE,CAAC;IACpFC,YAAY,GAAGV,OAAO,CAACO,MAAM,EAAES,IAAI,CAACR,IAAI,EAAEC,MAAM,EAAEG,YAAY,CAAC,CAAC;IAChER,GAAG,CAAC,cAAc,EAAEM,YAAY,CAAC;IACjC,OAAO;MAAEC,KAAK,EAAE,IAAI;MAAER,IAAI,EAAEO;IAAa,CAAC;EAC5C,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZb,GAAG,CAAC,sBAAsB,EAAEa,GAAG,CAAC;IAChC,OAAO;MAAEN,KAAK,EAAE;IAAM,CAAC;EACzB;AACF,CAAC;AAED,SAASK,IAAIA,CAACR,IAAI,EAAEC,MAAM,EAAEM,aAAa,EAAE;EACzC,OAAOG,MAAM,CAACC,MAAM,CAAC;IAAE;IACrB;IACAC,UAAU,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO;EAC9C,CAAC,EAAEX,MAAM,EAAE;IACT;IACAY,OAAO,EAAElB,IAAI,CAACmB,OAAO,CAACnB,IAAI,CAACH,OAAO,CAACQ,IAAI,CAAC,CAAC;IACzCO;EACF,CAAC,CAAC;AACJ;AAEA,SAASQ,QAAQA,CAACC,CAAC,EAAE;EAAE,OAAOA,CAAC;AAAE;AAEjC,SAAST,aAAaA,CAACF,GAAG,EAAEC,GAAG,EAAEL,MAAM,EAAE;EACvC,IAAIE,KAAK,GAAG,KAAK;EACjB,MAAMH,IAAI,GAAGL,IAAI,CAACsB,IAAI,CAACX,GAAG,EAAE,UAAU,CAAC;EACvC,IAAID,GAAG,CAACa,MAAM,EAAE;IACd,IAAI;MACF1B,OAAO,CAAC2B,MAAM,CAACd,GAAG,CAACa,MAAM,CAAC,CAACE,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,EAAEZ,IAAI,CAACR,IAAI,EAAEC,MAAM,EAAEc,QAAQ,CAAC,CAAC;MACrFV,GAAG,CAACgB,IAAI,GAAGhB,GAAG,CAACa,MAAM;MACrBf,KAAK,GAAG,IAAI;IACd,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZb,GAAG,CAAC,gDAAgD,EAAEa,GAAG,CAAC;IAC5D;EACF;EACA,IAAI,CAACN,KAAK,IAAIE,GAAG,CAAC,aAAa,CAAC,EAAE;IAChC,IAAI;MACFb,OAAO,CAAC2B,MAAM,CAACd,GAAG,CAAC,aAAa,CAAC,CAAC,CAACe,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,EAAEZ,IAAI,CAACR,IAAI,EAAEC,MAAM,EAAEc,QAAQ,CAAC,CAAC;MAC7FV,GAAG,CAACgB,IAAI,GAAGhB,GAAG,CAAC,aAAa,CAAC;MAC7BF,KAAK,GAAG,IAAI;IACd,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZb,GAAG,CAAC,0DAA0D,EAAEa,GAAG,CAAC;IACtE;EACF;EACA,OAAOJ,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}