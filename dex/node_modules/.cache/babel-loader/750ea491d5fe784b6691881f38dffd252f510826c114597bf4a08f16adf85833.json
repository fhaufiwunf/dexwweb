{"ast":null,"code":"import { InjectedConnector } from \"./chunk-BVC4KGLQ.js\";\nimport { __privateAdd, __privateGet, __privateMethod, __privateSet } from \"./chunk-MQXBDTVK.js\";\n\n// src/utils/configureChains.ts\nimport { providers } from \"ethers\";\nfunction configureChains(defaultChains, providers2) {\n  let {\n    minQuorum = 1,\n    pollingInterval = 4e3,\n    targetQuorum = 1,\n    stallTimeout\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!defaultChains.length) throw new Error(\"must have at least one chain\");\n  if (targetQuorum < minQuorum) throw new Error(\"quorum cannot be lower than minQuorum\");\n  let chains = [];\n  const providers_ = {};\n  const webSocketProviders_ = {};\n  for (const chain of defaultChains) {\n    let configExists = false;\n    for (const provider of providers2) {\n      const apiConfig = provider(chain);\n      if (!apiConfig) continue;\n      configExists = true;\n      if (!chains.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === chain.id;\n      })) {\n        chains = [...chains, apiConfig.chain];\n      }\n      providers_[chain.id] = [...(providers_[chain.id] || []), apiConfig.provider];\n      if (apiConfig.webSocketProvider) {\n        webSocketProviders_[chain.id] = [...(webSocketProviders_[chain.id] || []), apiConfig.webSocketProvider];\n      }\n    }\n    if (!configExists) {\n      throw new Error([`Could not find valid provider configuration for chain \"${chain.name}\".\n`, \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\", \"Read more: https://wagmi.sh/react/providers/jsonRpc\"].join(\"\\n\"));\n    }\n  }\n  return {\n    chains,\n    provider: _ref2 => {\n      let {\n        chainId\n      } = _ref2;\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainProviders = providers_[activeChain.id];\n      if (!chainProviders || !chainProviders[0]) throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      let provider;\n      if (chainProviders.length === 1) {\n        provider = chainProviders[0]();\n      } else {\n        provider = fallbackProvider(targetQuorum, minQuorum, chainProviders, {\n          stallTimeout\n        });\n      }\n      if (activeChain.id === 42220) {\n        provider.formatter.formats.block = {\n          ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n      return Object.assign(provider, {\n        chains,\n        pollingInterval\n      });\n    },\n    webSocketProvider: _ref3 => {\n      let {\n        chainId\n      } = _ref3;\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainWebSocketProviders = webSocketProviders_[activeChain.id];\n      if (!chainWebSocketProviders) return void 0;\n      const provider = chainWebSocketProviders[0]?.();\n      if (provider && activeChain.id === 42220) {\n        provider.formatter.formats.block = {\n          ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n      return Object.assign(provider || {}, {\n        chains\n      });\n    }\n  };\n}\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, _ref4) {\n  let {\n    stallTimeout\n  } = _ref4;\n  try {\n    return new providers.FallbackProvider(providers_.map((chainProvider, index) => {\n      const provider = chainProvider();\n      return {\n        provider,\n        priority: provider.priority ?? index,\n        stallTimeout: provider.stallTimeout ?? stallTimeout,\n        weight: provider.weight\n      };\n    }), targetQuorum);\n  } catch (error) {\n    if (error?.message?.includes(\"quorum will always fail; larger than total weight\")) {\n      if (targetQuorum === minQuorum) throw error;\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\n        stallTimeout\n      });\n    }\n    throw error;\n  }\n}\n\n// src/client.ts\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { createStore } from \"zustand/vanilla\";\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain(_ref5) {\n  let {\n    chainId,\n    signer\n  } = _ref5;\n  const {\n    chain: activeChain,\n    chains\n  } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find(x => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find(x => x.id === chainId)?.name ?? `Chain ${chainId}`\n    });\n  }\n  if (signer) {\n    const signerChainId = signer.provider?.network?.chainId;\n    if (signerChainId && chainId !== signerChainId) {\n      const connector = getClient().connector;\n      throw new ChainNotConfiguredError({\n        chainId,\n        connectorId: connector?.id ?? \"unknown\"\n      });\n    }\n  }\n}\n\n// src/utils/debounce.ts\nfunction debounce(fn) {\n  let waitTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    if (!waitTime) return fn(...args);\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      timeout = null;\n      fn(...args);\n    }, waitTime);\n  };\n}\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b) return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor) return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) if (!deepEqual(a[i], b[i])) return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key])) return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nimport { BigNumber } from \"ethers\";\nvar findAndReplace = (cacheRef, _ref6) => {\n  let {\n    find,\n    replace\n  } = _ref6;\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map(item => findAndReplace(item, {\n      find,\n      replace\n    }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce((curr, _ref7) => {\n      let [key, value] = _ref7;\n      return {\n        ...curr,\n        [key]: findAndReplace(value, {\n          find,\n          replace\n        })\n      };\n    }, {});\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\n    find: data => data.type === \"BigNumber\",\n    replace: data => BigNumber.from(data.hex)\n  });\n  return deserializedCacheWithBigNumbers;\n}\n\n// src/utils/normalizeFunctionName.ts\nimport { BigNumber as BigNumber2 } from \"ethers\";\nimport { FunctionFragment, isAddress } from \"ethers/lib/utils.js\";\nfunction normalizeFunctionName(_ref8) {\n  let {\n    contract,\n    functionName,\n    args = []\n  } = _ref8;\n  if (functionName in contract.functions) return functionName;\n  const argsLength = args?.length ?? 0;\n  const overloadFunctions = Object.keys(contract.functions).filter(x => x.startsWith(`${functionName}(`)).map(x => ({\n    name: x,\n    fragment: FunctionFragment.fromString(x)\n  })).filter(x => argsLength === x.fragment.inputs.length);\n  for (const overloadFunction of overloadFunctions) {\n    const matched = args.every((arg, index) => {\n      const abiParameter = overloadFunction.fragment.inputs[index];\n      return isArgOfType(arg, abiParameter);\n    });\n    if (matched) return overloadFunction.name;\n  }\n  return functionName;\n}\nfunction isArgOfType(arg, abiParameter) {\n  const argType = typeof arg;\n  const abiParameterType = abiParameter.type;\n  switch (abiParameterType) {\n    case \"address\":\n      return isAddress(arg);\n    case \"bool\":\n      return argType === \"boolean\";\n    case \"function\":\n      return argType === \"string\";\n    case \"string\":\n      return argType === \"string\";\n    default:\n      {\n        if (abiParameterType === \"tuple\" && \"components\" in abiParameter) return Object.values(abiParameter.components).every((component, index) => {\n          return isArgOfType(Object.values(arg)[index], component);\n        });\n        if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType)) return argType === \"number\" || argType === \"bigint\" || BigNumber2.isBigNumber(arg);\n        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType)) return argType === \"string\" || arg instanceof Uint8Array;\n        if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n          return Array.isArray(arg) && arg.every(x => isArgOfType(x, {\n            ...abiParameter,\n            type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, \"\")\n          }));\n        }\n        return false;\n      }\n  }\n}\n\n// src/utils/logger.ts\nfunction logWarn(message) {\n  getClient()?.config.logger?.warn?.(message);\n}\n\n// src/utils/minimizeContractInterface.ts\nimport { Contract } from \"ethers\";\nimport { FormatTypes } from \"ethers/lib/utils.js\";\nfunction minimizeContractInterface(config) {\n  try {\n    const minimizedAbi = config.abi.filter(x => x.type === \"function\" && x.name === config.functionName);\n    if (minimizedAbi.length === 0) throw new Error(\"Invalid ABI\");\n    return minimizedAbi;\n  } catch (error) {\n    const abi = Contract.getInterface(config.abi).format(FormatTypes.full);\n    const minimizedInterface = Array.isArray(abi) ? abi : [abi];\n    return minimizedInterface.filter(i => i.includes(config.functionName));\n  }\n}\n\n// src/utils/normalizeChainId.ts\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  if (typeof chainId === \"bigint\") return Number(chainId);\n  return chainId;\n}\n\n// src/utils/parseContractResult.ts\nimport { Contract as Contract2 } from \"ethers\";\nfunction isPlainArray(value) {\n  return Array.isArray(value) && Object.keys(value).length === value.length;\n}\nfunction parseContractResult(_ref9) {\n  let {\n    abi,\n    data,\n    functionName\n  } = _ref9;\n  if (data && isPlainArray(data)) {\n    const iface = Contract2.getInterface(abi);\n    const fragment = iface.getFunction(functionName);\n    const isTuple = (fragment.outputs?.length || 0) > 1;\n    const data_ = isTuple ? data : [data];\n    const encodedResult = iface.encodeFunctionResult(functionName, data_);\n    const decodedResult = iface.decodeFunctionResult(functionName, encodedResult);\n    return isTuple ? decodedResult : decodedResult[0];\n  }\n  return data;\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const {\n    length\n  } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(value, createReplacer(replacer, circularReplacer), indent ?? void 0);\n}\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: _key => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: _key => null\n};\nfunction createStorage(_ref10) {\n  let {\n    deserialize: deserialize2 = deserialize,\n    key: prefix = \"wagmi\",\n    serialize: serialize2 = serialize,\n    storage\n  } = _ref10;\n  return {\n    ...storage,\n    getItem: function (key) {\n      let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: key => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/client.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Client = class {\n  constructor(_ref11) {\n    let {\n      autoConnect = false,\n      connectors = [new InjectedConnector()],\n      provider,\n      storage = createStorage({\n        storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n      }),\n      logger = {\n        warn: console.warn\n      },\n      webSocketProvider\n    } = _ref11;\n    __privateAdd(this, _addEffects);\n    this.providers = /* @__PURE__ */new Map();\n    this.webSocketProviders = /* @__PURE__ */new Map();\n    __privateAdd(this, _isAutoConnecting, void 0);\n    __privateAdd(this, _lastUsedConnector, void 0);\n    this.config = {\n      autoConnect,\n      connectors,\n      logger,\n      provider,\n      storage,\n      webSocketProvider\n    };\n    let status = \"disconnected\";\n    let chainId;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = rawState?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId = data?.chain?.id;\n      } catch (_error) {}\n    }\n    this.store = createStore(subscribeWithSelector(persist(() => ({\n      connectors: typeof connectors === \"function\" ? connectors() : connectors,\n      provider: this.getProvider({\n        chainId\n      }),\n      status,\n      webSocketProvider: this.getWebSocketProvider({\n        chainId\n      })\n    }), {\n      name: storeKey,\n      storage,\n      partialize: state => ({\n        ...(autoConnect && {\n          data: {\n            account: state?.data?.account,\n            chain: state?.data?.chain\n          }\n        }),\n        chains: state?.chains\n      }),\n      version: 2\n    })));\n    this.storage = storage;\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\") setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get provider() {\n    return this.store.getState().provider;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketProvider() {\n    return this.store.getState().webSocketProvider;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState(x => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector) await this.connector.disconnect?.();\n    __privateSet(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting)) return;\n    __privateSet(this, _isAutoConnecting, true);\n    this.setState(x => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(x => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized) continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized) continue;\n      const data = await connector.connect();\n      this.setState(x => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected) this.setState(x => ({\n      ...x,\n      data: void 0,\n      status: \"disconnected\"\n    }));\n    __privateSet(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  getProvider() {\n    let {\n      bust,\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let provider_ = this.providers.get(chainId ?? -1);\n    if (provider_ && !bust) return provider_;\n    const {\n      provider\n    } = this.config;\n    provider_ = typeof provider === \"function\" ? provider({\n      chainId\n    }) : provider;\n    this.providers.set(chainId ?? -1, provider_);\n    return provider_;\n  }\n  getWebSocketProvider() {\n    let {\n      bust,\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let webSocketProvider_ = this.webSocketProviders.get(chainId ?? -1);\n    if (webSocketProvider_ && !bust) return webSocketProvider_;\n    const {\n      webSocketProvider\n    } = this.config;\n    webSocketProvider_ = typeof webSocketProvider === \"function\" ? webSocketProvider({\n      chainId\n    }) : webSocketProvider;\n    if (webSocketProvider_) this.webSocketProviders.set(chainId ?? -1, webSocketProvider_);\n    return webSocketProvider_;\n  }\n  setLastUsedConnector() {\n    let lastUsedConnector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function () {\n  const onChange = data => {\n    this.setState(x => ({\n      ...x,\n      data: {\n        ...x.data,\n        ...data\n      }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = error => {\n    this.setState(x => ({\n      ...x,\n      error\n    }));\n  };\n  this.store.subscribe(_ref12 => {\n    let {\n      connector\n    } = _ref12;\n    return connector;\n  }, (connector, prevConnector) => {\n    prevConnector?.off?.(\"change\", onChange);\n    prevConnector?.off?.(\"disconnect\", onDisconnect);\n    prevConnector?.off?.(\"error\", onError);\n    if (!connector) return;\n    connector.on?.(\"change\", onChange);\n    connector.on?.(\"disconnect\", onDisconnect);\n    connector.on?.(\"error\", onError);\n  });\n  const {\n    provider,\n    webSocketProvider\n  } = this.config;\n  const subscribeProvider = typeof provider === \"function\";\n  const subscribeWebSocketProvider = typeof webSocketProvider === \"function\";\n  if (subscribeProvider || subscribeWebSocketProvider) this.store.subscribe(_ref13 => {\n    let {\n      data\n    } = _ref13;\n    return data?.chain?.id;\n  }, chainId => {\n    this.setState(x => ({\n      ...x,\n      provider: this.getProvider({\n        bust: true,\n        chainId\n      }),\n      webSocketProvider: this.getWebSocketProvider({\n        bust: true,\n        chainId\n      })\n    }));\n  });\n};\nvar client;\nfunction createClient(config) {\n  const client_ = new Client(config);\n  client = client_;\n  return client_;\n}\nfunction getClient() {\n  if (!client) {\n    throw new Error(\"No wagmi client found. Ensure you have set up a client: https://wagmi.sh/react/client\");\n  }\n  return client;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect(_ref14) {\n  let {\n    chainId,\n    connector\n  } = _ref14;\n  const client2 = getClient();\n  const activeConnector = client2.connector;\n  if (activeConnector && connector.id === activeConnector.id) throw new ConnectorAlreadyConnectedError();\n  try {\n    client2.setState(x => ({\n      ...x,\n      status: \"connecting\"\n    }));\n    const data = await connector.connect({\n      chainId\n    });\n    client2.setLastUsedConnector(connector.id);\n    client2.setState(x => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    client2.storage.setItem(\"connected\", true);\n    return {\n      ...data,\n      connector\n    };\n  } catch (err) {\n    client2.setState(x => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const client2 = getClient();\n  if (client2.connector) await client2.connector.disconnect();\n  client2.clearState();\n  client2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\nimport { formatUnits as formatUnits3, parseBytes32String as parseBytes32String2 } from \"ethers/lib/utils.js\";\n\n// src/constants/abis.ts\nvar erc20ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc20ABI_bytes32 = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc721ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"ApprovalForAll\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"approved\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"getApproved\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"isApprovedForAll\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"operator\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"ownerOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"id\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"setApprovalForAll\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenURI\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"tokeId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}];\nvar multicallABI = [{\n  inputs: [{\n    components: [{\n      name: \"target\",\n      type: \"address\"\n    }, {\n      name: \"allowFailure\",\n      type: \"bool\"\n    }, {\n      name: \"callData\",\n      type: \"bytes\"\n    }],\n    name: \"calls\",\n    type: \"tuple[]\"\n  }],\n  name: \"aggregate3\",\n  outputs: [{\n    components: [{\n      name: \"success\",\n      type: \"bool\"\n    }, {\n      name: \"returnData\",\n      type: \"bytes\"\n    }],\n    name: \"returnData\",\n    type: \"tuple[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nvar erc4626ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Deposit\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Withdraw\",\n  type: \"event\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"asset\",\n  outputs: [{\n    name: \"assetTokenAddress\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"convertToAssets\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"convertToShares\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"deposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxDeposit\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxMint\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxRedeem\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxWithdraw\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"mint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewDeposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewMint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewRedeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewWithdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"redeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalAssets\",\n  outputs: [{\n    name: \"totalManagedAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transfer\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"withdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\n\n// src/constants/units.ts\nvar units = [\"wei\", \"kwei\", \"mwei\", \"gwei\", \"szabo\", \"finney\", \"ether\"];\n\n// src/actions/contracts/fetchToken.ts\nimport { formatUnits, parseBytes32String } from \"ethers/lib/utils.js\";\nasync function fetchToken(_ref15) {\n  let {\n    address,\n    chainId,\n    formatUnits: units2 = \"ether\"\n  } = _ref15;\n  async function fetchToken_(_ref16) {\n    let {\n      abi\n    } = _ref16;\n    const erc20Config = {\n      address,\n      abi,\n      chainId\n    };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [{\n        ...erc20Config,\n        functionName: \"decimals\"\n      }, {\n        ...erc20Config,\n        functionName: \"name\"\n      }, {\n        ...erc20Config,\n        functionName: \"symbol\"\n      }, {\n        ...erc20Config,\n        functionName: \"totalSupply\"\n      }]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, units2),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({\n      abi: erc20ABI\n    });\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError) {\n      const {\n        name,\n        symbol,\n        ...rest\n      } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: parseBytes32String(name),\n        symbol: parseBytes32String(symbol),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/contracts/getContract.ts\nimport { Contract as EthersContract } from \"ethers\";\nfunction getContract(_ref17) {\n  let {\n    address,\n    abi,\n    signerOrProvider\n  } = _ref17;\n  return new EthersContract(address, abi, signerOrProvider);\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract(_ref18) {\n  let {\n    abi,\n    address,\n    chainId,\n    functionName,\n    overrides,\n    signer: signer_,\n    ...config\n  } = _ref18;\n  const signer = signer_ ?? (await fetchSigner({\n    chainId\n  }));\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId,\n    signer\n  });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: signer\n  });\n  const args = config.args;\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const populateTransactionFn = contract.populateTransaction[normalizedFunctionName];\n  if (!populateTransactionFn) throw new ContractMethodDoesNotExistError({\n    address,\n    functionName: normalizedFunctionName\n  });\n  const params = [...(args ?? []), ...(overrides ? [overrides] : [])];\n  const unsignedTransaction = await populateTransactionFn(...params);\n  const gasLimit = unsignedTransaction.gasLimit || (await signer.estimateGas(unsignedTransaction));\n  const minimizedAbi = minimizeContractInterface({\n    abi,\n    functionName\n  });\n  return {\n    abi: minimizedAbi,\n    address,\n    chainId,\n    functionName,\n    mode: \"prepared\",\n    request: {\n      ...unsignedTransaction,\n      gasLimit\n    }\n  };\n}\n\n// src/actions/providers/getProvider.ts\nfunction getProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client2 = getClient();\n  if (chainId) return client2.getProvider({\n    chainId\n  }) || client2.provider;\n  return client2.provider;\n}\n\n// src/actions/providers/getWebSocketProvider.ts\nfunction getWebSocketProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client2 = getClient();\n  if (chainId) return client2.getWebSocketProvider({\n    chainId\n  }) || client2.webSocketProvider;\n  return client2.webSocketProvider;\n}\n\n// src/actions/providers/watchProvider.ts\nfunction watchProvider(args, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(getProvider(args));\n  const unsubscribe = client2.subscribe(_ref19 => {\n    let {\n      provider\n    } = _ref19;\n    return provider;\n  }, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/providers/watchWebSocketProvider.ts\nfunction watchWebSocketProvider(args, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(getWebSocketProvider(args));\n  const unsubscribe = client2.subscribe(_ref20 => {\n    let {\n      webSocketProvider\n    } = _ref20;\n    return webSocketProvider;\n  }, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall(_ref21) {\n  let {\n    allowFailure = true,\n    chainId,\n    contracts,\n    overrides\n  } = _ref21;\n  const provider = getProvider({\n    chainId\n  });\n  if (!provider.chains) throw new ProviderChainsNotFound();\n  const chain = provider.chains.find(chain2 => chain2.id === chainId) || provider.chains[0];\n  if (!chain) throw new ProviderChainsNotFound();\n  if (!chain?.contracts?.multicall3) throw new ChainDoesNotSupportMulticallError({\n    chain\n  });\n  if (typeof overrides?.blockTag === \"number\" && overrides?.blockTag < (chain.contracts.multicall3.blockCreated ?? 0)) throw new ChainDoesNotSupportMulticallError({\n    blockNumber: overrides?.blockTag,\n    chain\n  });\n  const multicallContract = getContract({\n    address: chain.contracts.multicall3.address,\n    abi: multicallABI,\n    signerOrProvider: provider\n  });\n  const calls = contracts.map(_ref22 => {\n    let {\n      address,\n      abi,\n      functionName,\n      ...config\n    } = _ref22;\n    const {\n      args\n    } = config || {};\n    const contract = getContract({\n      address,\n      abi\n    });\n    const params2 = args ?? [];\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n    try {\n      const contractFunction = contract[normalizedFunctionName];\n      if (!contractFunction) logWarn(`\"${normalizedFunctionName}\" is not in the interface for contract \"${address}\"`);\n      const callData = contract.interface.encodeFunctionData(normalizedFunctionName, params2);\n      return {\n        target: address,\n        allowFailure,\n        callData\n      };\n    } catch (err) {\n      if (!allowFailure) throw err;\n      return {\n        target: address,\n        allowFailure,\n        callData: \"0x\"\n      };\n    }\n  });\n  const params = [...[calls], ...(overrides ? [overrides] : [])];\n  const results = await multicallContract.aggregate3(...params);\n  return results.map((_ref23, i) => {\n    let {\n      returnData,\n      success\n    } = _ref23;\n    const {\n      address,\n      abi,\n      functionName,\n      ...rest\n    } = contracts[i];\n    const contract = getContract({\n      address,\n      abi\n    });\n    const args = rest.args;\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n    if (!success) {\n      let error;\n      try {\n        contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);\n      } catch (err) {\n        error = new ContractMethodRevertedError({\n          address,\n          args,\n          chainId: chain.id,\n          functionName: normalizedFunctionName,\n          errorMessage: err.message\n        });\n        if (!allowFailure) throw error;\n        logWarn(error.message);\n      }\n      return null;\n    }\n    if (returnData === \"0x\") {\n      const error = new ContractMethodNoResultError({\n        address,\n        args,\n        chainId: chain.id,\n        functionName: normalizedFunctionName\n      });\n      if (!allowFailure) throw error;\n      logWarn(error.message);\n      return null;\n    }\n    try {\n      const result = contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);\n      return Array.isArray(result) && result.length === 1 ? result[0] : result;\n    } catch (err) {\n      const error = new ContractResultDecodeError({\n        address,\n        args,\n        chainId: chain.id,\n        functionName: normalizedFunctionName,\n        errorMessage: err.message\n      });\n      if (!allowFailure) throw error;\n      logWarn(error.message);\n      return null;\n    }\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract(_ref24) {\n  let {\n    address,\n    chainId,\n    abi,\n    functionName,\n    overrides,\n    ...config\n  } = _ref24;\n  const provider = getProvider({\n    chainId\n  });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: provider\n  });\n  const args = config.args;\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const contractFunction = contract[normalizedFunctionName];\n  if (!contractFunction) throw new ContractMethodDoesNotExistError({\n    address,\n    functionName: normalizedFunctionName\n  });\n  const params = [...(args ?? []), ...(overrides ? [overrides] : [])];\n  return contractFunction?.(...params);\n}\n\n// src/actions/contracts/readContracts.ts\nasync function readContracts(_ref25) {\n  let {\n    allowFailure = true,\n    contracts,\n    overrides\n  } = _ref25;\n  try {\n    const provider = getProvider();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = contract.chainId ?? provider.network.chainId;\n      return {\n        ...contracts2,\n        [chainId]: [...(contracts2[chainId] || []), {\n          contract,\n          index\n        }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(_ref26 => {\n      let [chainId, contracts2] = _ref26;\n      return multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts2.map(_ref27 => {\n          let {\n            contract\n          } = _ref27;\n          return contract;\n        }),\n        overrides\n      });\n    });\n    let multicallResults;\n    if (allowFailure) {\n      multicallResults = (await Promise.allSettled(promises())).map(result => {\n        if (result.status === \"fulfilled\") return result.value;\n        if (result.reason instanceof ChainDoesNotSupportMulticallError) {\n          logWarn(result.reason.message);\n          throw result.reason;\n        }\n        return null;\n      }).flat();\n    } else {\n      multicallResults = (await Promise.all(promises())).flat();\n    }\n    const resultIndexes = Object.values(contractsByChainId).map(contracts2 => contracts2.map(_ref28 => {\n      let {\n        index\n      } = _ref28;\n      return index;\n    })).flat();\n    return multicallResults.reduce((results, result, index) => {\n      if (results) results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError) throw err;\n    if (err instanceof ContractMethodNoResultError) throw err;\n    if (err instanceof ContractMethodRevertedError) throw err;\n    const promises = () => contracts.map(contract => readContract({\n      ...contract,\n      overrides\n    }));\n    if (allowFailure) return (await Promise.allSettled(promises())).map((result, i) => {\n      if (result.status === \"fulfilled\") return result.value;\n      const {\n        address,\n        args,\n        chainId,\n        functionName\n      } = contracts[i];\n      const error = new ContractMethodRevertedError({\n        address,\n        functionName,\n        chainId: chainId ?? 1,\n        args,\n        errorMessage: result.reason\n      });\n      logWarn(error.message);\n      return null;\n    });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\nimport { shallow } from \"zustand/shallow\";\nfunction watchContractEvent(_ref29, callback) {\n  let {\n    address,\n    abi,\n    chainId,\n    eventName,\n    once\n  } = _ref29;\n  const handler = function () {\n    return callback(...arguments);\n  };\n  let contract;\n  const watchEvent = async () => {\n    if (contract) contract?.off(eventName, handler);\n    const signerOrProvider = getWebSocketProvider({\n      chainId\n    }) || getProvider({\n      chainId\n    });\n    contract = getContract({\n      address,\n      abi,\n      signerOrProvider\n    });\n    if (once) contract.once(eventName, handler);else contract.on(eventName, handler);\n  };\n  watchEvent();\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(_ref30 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref30;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, watchEvent, {\n    equalityFn: shallow\n  });\n  return () => {\n    contract?.off(eventName, handler);\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nimport { shallow as shallow2 } from \"zustand/shallow\";\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nfunction watchBlockNumber(args, callback) {\n  const debouncedCallback = debounce(callback, 1);\n  let previousProvider;\n  const createListener = provider => {\n    if (previousProvider) {\n      previousProvider?.off(\"block\", debouncedCallback);\n    }\n    provider.on(\"block\", debouncedCallback);\n    previousProvider = provider;\n  };\n  const provider_ = getWebSocketProvider({\n    chainId: args.chainId\n  }) ?? getProvider({\n    chainId: args.chainId\n  });\n  if (args.listen) createListener(provider_);\n  let active = true;\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(_ref31 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref31;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, async _ref32 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref32;\n    const provider_2 = webSocketProvider ?? provider;\n    if (args.listen && !args.chainId && provider_2) {\n      createListener(provider_2);\n    }\n    const blockNumber = await fetchBlockNumber({\n      chainId: args.chainId\n    });\n    if (!active) return;\n    callback(blockNumber);\n  }, {\n    equalityFn: shallow2\n  });\n  return () => {\n    active = false;\n    unsubscribe();\n    provider_?.off(\"block\", debouncedCallback);\n    previousProvider?.off(\"block\", debouncedCallback);\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await multicall(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(_ref33 => {\n    let {\n      provider\n    } = _ref33;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await readContract(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(_ref34 => {\n    let {\n      provider\n    } = _ref34;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await readContracts(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(_ref35 => {\n    let {\n      provider\n    } = _ref35;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction(_ref36) {\n  let {\n    chainId,\n    hash\n  } = _ref36;\n  const provider = getProvider({\n    chainId\n  });\n  return provider.getTransaction(hash);\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nimport { isAddress as isAddress2 } from \"ethers/lib/utils.js\";\n\n// src/actions/ens/fetchEnsAddress.ts\nimport { getAddress } from \"ethers/lib/utils.js\";\nasync function fetchEnsAddress(_ref37) {\n  let {\n    chainId,\n    name\n  } = _ref37;\n  const provider = getProvider({\n    chainId\n  });\n  const address = await provider.resolveName(name);\n  try {\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nasync function fetchEnsAvatar(_ref38) {\n  let {\n    address,\n    chainId\n  } = _ref38;\n  const provider = getProvider({\n    chainId\n  });\n  const avatar = await provider.getAvatar(address);\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\nimport { getAddress as getAddress2 } from \"ethers/lib/utils.js\";\nasync function fetchEnsName(_ref39) {\n  let {\n    address,\n    chainId\n  } = _ref39;\n  const provider = getProvider({\n    chainId\n  });\n  return provider.lookupAddress(getAddress2(address));\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nasync function fetchEnsResolver(_ref40) {\n  let {\n    chainId,\n    name\n  } = _ref40;\n  const provider = getProvider({\n    chainId\n  });\n  const resolver = await provider.getResolver(name);\n  return resolver;\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nasync function prepareSendTransaction(_ref41) {\n  let {\n    chainId,\n    request,\n    signer: signer_\n  } = _ref41;\n  const signer = signer_ ?? (await fetchSigner({\n    chainId\n  }));\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId,\n    signer\n  });\n  const [to, gasLimit] = await Promise.all([isAddress2(request.to) ? Promise.resolve(request.to) : fetchEnsAddress({\n    name: request.to\n  }), request.gasLimit ? Promise.resolve(request.gasLimit) : signer.estimateGas(request)]);\n  if (!to) throw new Error(\"Could not resolve ENS name\");\n  return {\n    ...(chainId ? {\n      chainId\n    } : {}),\n    request: {\n      ...request,\n      gasLimit,\n      to\n    },\n    mode: \"prepared\"\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction(_ref42) {\n  let {\n    chainId,\n    mode,\n    request\n  } = _ref42;\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  if (mode === \"prepared\") {\n    if (!request.gasLimit) throw new Error(\"`gasLimit` is required\");\n    if (!request.to) throw new Error(\"`to` is required\");\n  }\n  if (chainId) assertActiveChain({\n    chainId,\n    signer\n  });\n  try {\n    const uncheckedSigner = signer.connectUnchecked?.();\n    const {\n      hash,\n      wait\n    } = await (uncheckedSigner ?? signer).sendTransaction(request);\n    return {\n      hash,\n      wait\n    };\n  } catch (error) {\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\") throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/transactions/waitForTransaction.ts\nimport { toUtf8String } from \"ethers/lib/utils.js\";\n\n// src/actions/network-status/fetchFeeData.ts\nimport { formatUnits as formatUnits2 } from \"ethers/lib/utils.js\";\nasync function fetchFeeData() {\n  let {\n    chainId,\n    formatUnits: units2 = \"wei\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const feeData = await provider.getFeeData();\n  const formatted = {\n    gasPrice: feeData.gasPrice ? formatUnits2(feeData.gasPrice, units2) : null,\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits2(feeData.maxFeePerGas, units2) : null,\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits2(feeData.maxPriorityFeePerGas, units2) : null\n  };\n  return {\n    ...feeData,\n    formatted\n  };\n}\n\n// src/actions/transactions/waitForTransaction.ts\nasync function waitForTransaction(_ref43) {\n  let {\n    chainId,\n    confirmations = 1,\n    hash,\n    onSpeedUp,\n    timeout = 0\n  } = _ref43;\n  const provider = getProvider({\n    chainId\n  });\n  const [blockNumber, transaction] = await Promise.all([fetchBlockNumber(), fetchTransaction({\n    hash\n  })]);\n  let replaceable = null;\n  if (confirmations !== 0 && transaction?.to) {\n    replaceable = {\n      data: transaction.data,\n      from: transaction.from,\n      nonce: transaction.nonce,\n      startBlock: blockNumber,\n      to: transaction.to,\n      value: transaction.value\n    };\n  }\n  try {\n    const receipt = await provider._waitForTransaction(hash, confirmations, timeout, replaceable);\n    if (receipt.status === 0) {\n      const code = await provider.call(receipt, receipt.blockNumber);\n      const reason = toUtf8String(`0x${code.substring(138)}`);\n      throw new Error(reason);\n    }\n    return receipt;\n  } catch (err) {\n    if (err?.reason === \"repriced\") {\n      onSpeedUp?.(err.replacement);\n      return waitForTransaction({\n        hash: err.replacement?.hash,\n        confirmations,\n        timeout\n      });\n    }\n    throw err;\n  }\n}\n\n// src/actions/transactions/watchPendingTransactions.ts\nimport { shallow as shallow3 } from \"zustand/shallow\";\nfunction watchPendingTransactions(args, callback) {\n  let previousProvider;\n  const createListener = provider => {\n    if (previousProvider) {\n      previousProvider?.off(\"pending\", callback);\n    }\n    provider.on(\"pending\", callback);\n    previousProvider = provider;\n  };\n  const provider_ = getWebSocketProvider({\n    chainId: args.chainId\n  }) ?? getProvider({\n    chainId: args.chainId\n  });\n  createListener(provider_);\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(_ref44 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref44;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, async _ref45 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref45;\n    const provider_2 = webSocketProvider ?? provider;\n    if (!args.chainId && provider_2) {\n      createListener(provider_2);\n    }\n  }, {\n    equalityFn: shallow3\n  });\n  return () => {\n    unsubscribe();\n    provider_?.off(\"pending\", callback);\n    previousProvider?.off(\"pending\", callback);\n  };\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(_ref46) {\n  let {\n    address,\n    args,\n    chainId,\n    abi,\n    functionName,\n    mode,\n    overrides,\n    request: request_\n  } = _ref46;\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId,\n    signer\n  });\n  if (mode === \"prepared\") {\n    if (!request_) throw new Error(\"`request` is required\");\n  }\n  const request = mode === \"recklesslyUnprepared\" ? (await prepareWriteContract({\n    address,\n    args,\n    chainId,\n    abi,\n    functionName,\n    overrides\n  })).request : request_;\n  const transaction = await sendTransaction({\n    request,\n    mode: \"prepared\"\n  });\n  return transaction;\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance(_ref47) {\n  let {\n    address,\n    chainId,\n    formatUnits: unit,\n    token\n  } = _ref47;\n  const client2 = getClient();\n  const provider = getProvider({\n    chainId\n  });\n  if (token) {\n    const fetchContractBalance = async _ref48 => {\n      let {\n        abi\n      } = _ref48;\n      const erc20Config = {\n        abi,\n        address: token,\n        chainId\n      };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [{\n          ...erc20Config,\n          functionName: \"balanceOf\",\n          args: [address]\n        }, {\n          ...erc20Config,\n          functionName: \"decimals\"\n        }, {\n          ...erc20Config,\n          functionName: \"symbol\"\n        }]\n      });\n      return {\n        decimals,\n        formatted: formatUnits3(value2 ?? \"0\", unit ?? decimals),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({\n        abi: erc20ABI\n      });\n    } catch (err) {\n      if (err instanceof ContractResultDecodeError) {\n        const {\n          symbol,\n          ...rest\n        } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: parseBytes32String2(symbol),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [...(client2.provider.chains || []), ...(client2.chains ?? [])];\n  const value = await provider.getBalance(address);\n  const chain = chains.find(x => x.id === provider.network.chainId);\n  return {\n    decimals: chain?.nativeCurrency.decimals ?? 18,\n    formatted: formatUnits3(value ?? \"0\", unit ?? \"ether\"),\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/fetchSigner.ts\nasync function fetchSigner() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client2 = getClient();\n  const signer = (await client2.connector?.getSigner?.({\n    chainId\n  })) || null;\n  return signer;\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const {\n    data,\n    connector,\n    status\n  } = getClient();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const client2 = getClient();\n  const chainId = client2.data?.chain?.id;\n  const activeChains = client2.chains ?? [];\n  const activeChain = [...(client2.provider.chains || []), ...activeChains].find(x => x.id === chainId) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: {\n      name: \"Ether\",\n      decimals: 18,\n      symbol: \"ETH\"\n    },\n    rpcUrls: {\n      default: {\n        http: [\"\"]\n      },\n      public: {\n        http: [\"\"]\n      }\n    }\n  };\n  return {\n    chain: chainId ? {\n      ...activeChain,\n      ...client2.data?.chain,\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError();\n    return await signer.signMessage(args.message);\n  } catch (error) {\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\") throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData(_ref49) {\n  let {\n    domain,\n    types,\n    value\n  } = _ref49;\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  const {\n    chainId: chainId_\n  } = domain;\n  const chainId = chainId_ ? normalizeChainId(chainId_) : void 0;\n  if (chainId) assertActiveChain({\n    chainId,\n    signer\n  });\n  const types_ = Object.entries(types).filter(_ref50 => {\n    let [key] = _ref50;\n    return key !== \"EIP712Domain\";\n  }).reduce((types2, _ref51) => {\n    let [key, attributes] = _ref51;\n    types2[key] = attributes.filter(attr => attr.type !== \"EIP712Domain\");\n    return types2;\n  }, {});\n  try {\n    return await signer._signTypedData(domain, types_, value);\n  } catch (error) {\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\") throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork(_ref52) {\n  let {\n    chainId\n  } = _ref52;\n  const {\n    connector\n  } = getClient();\n  if (!connector) throw new ConnectorNotFoundError();\n  if (!connector.switchChain) throw new SwitchChainNotSupportedError({\n    connector\n  });\n  return connector.switchChain(chainId);\n}\n\n// src/actions/accounts/watchAccount.ts\nimport { shallow as shallow4 } from \"zustand/shallow\";\nfunction watchAccount(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client2 = getClient();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = client2.subscribe(_ref53 => {\n    let {\n      data,\n      connector,\n      status\n    } = _ref53;\n    return selector({\n      address: data?.account,\n      connector,\n      status\n    });\n  }, handleChange, {\n    equalityFn: shallow4\n  });\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\nimport { shallow as shallow5 } from \"zustand/shallow\";\nfunction watchNetwork(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client2 = getClient();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = client2.subscribe(_ref54 => {\n    let {\n      data,\n      chains\n    } = _ref54;\n    return selector({\n      chainId: data?.chain?.id,\n      chains\n    });\n  }, handleChange, {\n    equalityFn: shallow5\n  });\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchSigner.ts\nimport { shallow as shallow6 } from \"zustand/shallow\";\nfunction watchSigner(_ref55, callback) {\n  let {\n    chainId\n  } = _ref55;\n  const client2 = getClient();\n  const handleChange = async () => {\n    const signer = await fetchSigner({\n      chainId\n    });\n    if (!getClient().connector) return callback(null);\n    return callback(signer);\n  };\n  const unsubscribe = client2.subscribe(_ref56 => {\n    let {\n      data,\n      connector\n    } = _ref56;\n    return {\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: shallow6\n  });\n  return unsubscribe;\n}\n\n// src/errors.ts\nvar RpcError = class extends Error {\n  constructor(message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) throw new Error('\"code\" must be an integer.');\n    if (!message || typeof message !== \"string\") throw new Error('\"message\" must be a nonempty string.');\n    super(message);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n};\nvar ProviderRpcError = class extends RpcError {\n  constructor(message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1e3 && code <= 4999)) throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n};\nvar AddChainError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"AddChainError\";\n    this.message = \"Error adding chain\";\n  }\n};\nvar ChainDoesNotSupportMulticallError = class extends Error {\n  constructor(_ref57) {\n    let {\n      blockNumber,\n      chain\n    } = _ref57;\n    super(`Chain \"${chain.name}\" does not support multicall${blockNumber ? ` on block ${blockNumber}` : \"\"}.`);\n    this.name = \"ChainDoesNotSupportMulticall\";\n  }\n};\nvar ChainMismatchError = class extends Error {\n  constructor(_ref58) {\n    let {\n      activeChain,\n      targetChain\n    } = _ref58;\n    super(`Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`);\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor(_ref59) {\n    let {\n      chainId,\n      connectorId\n    } = _ref59;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConnectorNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotFoundError\";\n    this.message = \"Connector not found\";\n  }\n};\nvar ContractMethodDoesNotExistError = class extends Error {\n  constructor(_ref60) {\n    let {\n      address,\n      chainId,\n      functionName\n    } = _ref60;\n    const {\n      chains,\n      network\n    } = getProvider();\n    const chain = chains?.find(_ref61 => {\n      let {\n        id\n      } = _ref61;\n      return id === (chainId || network.chainId);\n    });\n    const blockExplorer = chain?.blockExplorers?.default;\n    super([`Function \"${functionName}\" on contract \"${address}\" does not exist.`, ...(blockExplorer ? [\"\", `${blockExplorer?.name}: ${blockExplorer?.url}/address/${address}#readContract`] : [])].join(\"\\n\"));\n    this.name = \"ContractMethodDoesNotExistError\";\n  }\n};\nvar ContractMethodNoResultError = class extends Error {\n  constructor(_ref62) {\n    let {\n      address,\n      args,\n      chainId,\n      functionName\n    } = _ref62;\n    super([\"Contract read returned an empty response. This could be due to any of the following:\", `- The contract does not have the function \"${functionName}\",`, \"- The parameters passed to the contract function may be invalid, or\", \"- The address is not a contract.\", \"\", `Config:`, JSON.stringify({\n      address,\n      abi: \"...\",\n      functionName,\n      chainId,\n      args\n    }, null, 2)].join(\"\\n\"));\n    this.name = \"ContractMethodNoResultError\";\n  }\n};\nvar ContractMethodRevertedError = class extends Error {\n  constructor(_ref63) {\n    let {\n      address,\n      args,\n      chainId,\n      functionName,\n      errorMessage\n    } = _ref63;\n    super([\"Contract method reverted with an error.\", \"\", `Config:`, JSON.stringify({\n      address,\n      abi: \"...\",\n      functionName,\n      chainId,\n      args\n    }, null, 2), \"\", `Details: ${errorMessage}`].join(\"\\n\"));\n    this.name = \"ContractMethodRevertedError\";\n  }\n};\nvar ContractResultDecodeError = class extends Error {\n  constructor(_ref64) {\n    let {\n      address,\n      args,\n      chainId,\n      functionName,\n      errorMessage\n    } = _ref64;\n    super([\"Failed to decode contract function result.\", \"\", `Config:`, JSON.stringify({\n      address,\n      abi: \"...\",\n      functionName,\n      chainId,\n      args\n    }, null, 2), \"\", `Details: ${errorMessage}`].join(\"\\n\"));\n    this.name = \"ContractResultDecodeError\";\n  }\n};\nvar ProviderChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ProviderChainsNotFound\";\n    this.message = [\"No chains were found on the wagmi provider. Some functions that require a chain may not work.\", \"\", \"It is recommended to add a list of chains to the provider in `createClient`.\", \"\", \"Example:\", \"\", \"```\", \"import { getDefaultProvider } from 'ethers'\", \"import { chain, createClient } from 'wagmi'\", \"\", \"createClient({\", \"  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })\", \"})\", \"```\"].join(\"\\n\");\n  }\n};\nvar ResourceUnavailableError = class extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    this.name = \"ResourceUnavailable\";\n  }\n};\nvar SwitchChainError = class extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    this.name = \"SwitchChainError\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor(_ref65) {\n    let {\n      connector\n    } = _ref65;\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\nvar UserRejectedRequestError = class extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    this.name = \"UserRejectedRequestError\";\n  }\n};\nexport { configureChains, RpcError, ProviderRpcError, AddChainError, ChainDoesNotSupportMulticallError, ChainMismatchError, ChainNotConfiguredError, ConnectorAlreadyConnectedError, ConnectorNotFoundError, ContractMethodDoesNotExistError, ContractMethodNoResultError, ContractMethodRevertedError, ContractResultDecodeError, ProviderChainsNotFound, ResourceUnavailableError, SwitchChainError, SwitchChainNotSupportedError, UserRejectedRequestError, debounce, deepEqual, deserialize, minimizeContractInterface, normalizeChainId, parseContractResult, serialize, noopStorage, createStorage, Client, createClient, getClient, connect, disconnect, erc20ABI, erc721ABI, erc4626ABI, units, fetchToken, getContract, prepareWriteContract, getProvider, getWebSocketProvider, watchProvider, watchWebSocketProvider, multicall, readContract, readContracts, watchContractEvent, fetchBlockNumber, watchBlockNumber, watchMulticall, watchReadContract, watchReadContracts, fetchTransaction, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, prepareSendTransaction, sendTransaction, fetchFeeData, waitForTransaction, watchPendingTransactions, writeContract, fetchBalance, fetchSigner, getAccount, getNetwork, signMessage, signTypedData, switchNetwork, watchAccount, watchNetwork, watchSigner };","map":{"version":3,"names":["InjectedConnector","__privateAdd","__privateGet","__privateMethod","__privateSet","providers","configureChains","defaultChains","providers2","minQuorum","pollingInterval","targetQuorum","stallTimeout","arguments","length","undefined","Error","chains","providers_","webSocketProviders_","chain","configExists","provider","apiConfig","some","_ref","id","webSocketProvider","name","join","_ref2","chainId","activeChain","find","x","chainProviders","fallbackProvider","formatter","formats","block","difficulty","gasLimit","Object","assign","_ref3","chainWebSocketProviders","_ref4","FallbackProvider","map","chainProvider","index","priority","weight","error","message","includes","persist","subscribeWithSelector","createStore","assertActiveChain","_ref5","signer","getNetwork","activeChainId","ChainMismatchError","targetChain","signerChainId","network","connector","getClient","ChainNotConfiguredError","connectorId","debounce","fn","waitTime","timeout","_len","args","Array","_key2","clearTimeout","setTimeout","deepEqual","a","b","constructor","i","isArray","valueOf","prototype","toString","keys","hasOwnProperty","call","key","BigNumber","findAndReplace","cacheRef","_ref6","replace","item","entries","reduce","curr","_ref7","value","deserialize","cachedString","cache","JSON","parse","deserializedCacheWithBigNumbers","data","type","from","hex","BigNumber2","FunctionFragment","isAddress","normalizeFunctionName","_ref8","contract","functionName","functions","argsLength","overloadFunctions","filter","startsWith","fragment","fromString","inputs","overloadFunction","matched","every","arg","abiParameter","isArgOfType","argType","abiParameterType","values","components","component","test","isBigNumber","Uint8Array","logWarn","config","logger","warn","Contract","FormatTypes","minimizeContractInterface","minimizedAbi","abi","getInterface","format","full","minimizedInterface","normalizeChainId","Number","parseInt","trim","substring","Contract2","isPlainArray","parseContractResult","_ref9","iface","getFunction","isTuple","outputs","data_","encodedResult","encodeFunctionResult","decodedResult","decodeFunctionResult","getReferenceKey","cutoff","slice","getCutoff","array","createReplacer","replacer","circularReplacer","hasReplacer","hasCircularReplacer","thisCutoff","splice","valueCutoff","serialize","indent","stringify","noopStorage","getItem","_key","setItem","_value","removeItem","createStorage","_ref10","deserialize2","prefix","serialize2","storage","defaultState","console","err","storeKey","_isAutoConnecting","_lastUsedConnector","_addEffects","addEffects_fn","Client","_ref11","autoConnect","connectors","window","localStorage","Map","webSocketProviders","status","rawState","state","account","_error","store","getProvider","getWebSocketProvider","partialize","version","getState","lastUsedChainId","subscribe","setState","updater","newState","clearState","destroy","disconnect","sorted","sort","connected","ready","isAuthorized","connect","bust","provider_","get","set","webSocketProvider_","setLastUsedConnector","lastUsedConnector","WeakMap","WeakSet","onChange","onDisconnect","onError","_ref12","prevConnector","off","on","subscribeProvider","subscribeWebSocketProvider","_ref13","client","createClient","client_","_ref14","client2","activeConnector","ConnectorAlreadyConnectedError","formatUnits","formatUnits3","parseBytes32String","parseBytes32String2","erc20ABI","indexed","stateMutability","erc20ABI_bytes32","erc721ABI","multicallABI","erc4626ABI","anonymous","units","fetchToken","_ref15","address","units2","fetchToken_","_ref16","erc20Config","decimals","symbol","totalSupply","readContracts","allowFailure","contracts","formatted","ContractResultDecodeError","rest","EthersContract","getContract","_ref17","signerOrProvider","prepareWriteContract","_ref18","overrides","signer_","fetchSigner","ConnectorNotFoundError","normalizedFunctionName","populateTransactionFn","populateTransaction","ContractMethodDoesNotExistError","params","unsignedTransaction","estimateGas","mode","request","watchProvider","callback","handleChange","unsubscribe","_ref19","watchWebSocketProvider","_ref20","multicall","_ref21","ProviderChainsNotFound","chain2","multicall3","ChainDoesNotSupportMulticallError","blockTag","blockCreated","blockNumber","multicallContract","calls","_ref22","params2","contractFunction","callData","interface","encodeFunctionData","target","results","aggregate3","_ref23","returnData","success","ContractMethodRevertedError","errorMessage","ContractMethodNoResultError","result","readContract","_ref24","_ref25","contractsByChainId","contracts2","promises","_ref26","_ref27","multicallResults","Promise","allSettled","reason","flat","all","resultIndexes","_ref28","shallow","watchContractEvent","_ref29","eventName","once","handler","watchEvent","_ref30","equalityFn","shallow2","fetchBlockNumber","getBlockNumber","watchBlockNumber","debouncedCallback","previousProvider","createListener","listen","active","_ref31","_ref32","provider_2","watchMulticall","unwatch","listenToBlock","_ref33","watchReadContract","_ref34","watchReadContracts","_ref35","fetchTransaction","_ref36","hash","getTransaction","isAddress2","getAddress","fetchEnsAddress","_ref37","resolveName","fetchEnsAvatar","_ref38","avatar","getAvatar","getAddress2","fetchEnsName","_ref39","lookupAddress","fetchEnsResolver","_ref40","resolver","getResolver","prepareSendTransaction","_ref41","to","resolve","sendTransaction","_ref42","uncheckedSigner","connectUnchecked","wait","code","UserRejectedRequestError","toUtf8String","formatUnits2","fetchFeeData","feeData","getFeeData","gasPrice","maxFeePerGas","maxPriorityFeePerGas","waitForTransaction","_ref43","confirmations","onSpeedUp","transaction","replaceable","nonce","startBlock","receipt","_waitForTransaction","replacement","shallow3","watchPendingTransactions","_ref44","_ref45","writeContract","_ref46","request_","fetchBalance","_ref47","unit","token","fetchContractBalance","_ref48","value2","getBalance","nativeCurrency","getSigner","getAccount","isConnected","isConnecting","isDisconnected","isReconnecting","activeChains","rpcUrls","default","http","public","signMessage","signTypedData","_ref49","domain","types","chainId_","types_","_ref50","types2","_ref51","attributes","attr","_signTypedData","switchNetwork","_ref52","switchChain","SwitchChainNotSupportedError","shallow4","watchAccount","selector","_ref53","shallow5","watchNetwork","_ref54","shallow6","watchSigner","_ref55","_ref56","RpcError","options","cause","isInteger","ProviderRpcError","AddChainError","_ref57","_ref58","_ref59","_ref60","_ref61","blockExplorer","blockExplorers","url","_ref62","_ref63","_ref64","ResourceUnavailableError","SwitchChainError","_ref65"],"sources":["D:/Code/DEX/dexwweb/dex/node_modules/@wagmi/core/dist/chunk-TQJMA6J5.js"],"sourcesContent":["import {\r\n  InjectedConnector\r\n} from \"./chunk-BVC4KGLQ.js\";\r\nimport {\r\n  __privateAdd,\r\n  __privateGet,\r\n  __privateMethod,\r\n  __privateSet\r\n} from \"./chunk-MQXBDTVK.js\";\r\n\r\n// src/utils/configureChains.ts\r\nimport { providers } from \"ethers\";\r\nfunction configureChains(defaultChains, providers2, {\r\n  minQuorum = 1,\r\n  pollingInterval = 4e3,\r\n  targetQuorum = 1,\r\n  stallTimeout\r\n} = {}) {\r\n  if (!defaultChains.length)\r\n    throw new Error(\"must have at least one chain\");\r\n  if (targetQuorum < minQuorum)\r\n    throw new Error(\"quorum cannot be lower than minQuorum\");\r\n  let chains = [];\r\n  const providers_ = {};\r\n  const webSocketProviders_ = {};\r\n  for (const chain of defaultChains) {\r\n    let configExists = false;\r\n    for (const provider of providers2) {\r\n      const apiConfig = provider(chain);\r\n      if (!apiConfig)\r\n        continue;\r\n      configExists = true;\r\n      if (!chains.some(({ id }) => id === chain.id)) {\r\n        chains = [...chains, apiConfig.chain];\r\n      }\r\n      providers_[chain.id] = [\r\n        ...providers_[chain.id] || [],\r\n        apiConfig.provider\r\n      ];\r\n      if (apiConfig.webSocketProvider) {\r\n        webSocketProviders_[chain.id] = [\r\n          ...webSocketProviders_[chain.id] || [],\r\n          apiConfig.webSocketProvider\r\n        ];\r\n      }\r\n    }\r\n    if (!configExists) {\r\n      throw new Error(\r\n        [\r\n          `Could not find valid provider configuration for chain \"${chain.name}\".\r\n`,\r\n          \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\",\r\n          \"Read more: https://wagmi.sh/react/providers/jsonRpc\"\r\n        ].join(\"\\n\")\r\n      );\r\n    }\r\n  }\r\n  return {\r\n    chains,\r\n    provider: ({ chainId }) => {\r\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\r\n      const chainProviders = providers_[activeChain.id];\r\n      if (!chainProviders || !chainProviders[0])\r\n        throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\r\n      let provider;\r\n      if (chainProviders.length === 1) {\r\n        provider = chainProviders[0]();\r\n      } else {\r\n        provider = fallbackProvider(targetQuorum, minQuorum, chainProviders, {\r\n          stallTimeout\r\n        });\r\n      }\r\n      if (activeChain.id === 42220) {\r\n        provider.formatter.formats.block = {\r\n          ...provider.formatter.formats.block,\r\n          difficulty: () => 0,\r\n          gasLimit: () => 0\r\n        };\r\n      }\r\n      return Object.assign(provider, {\r\n        chains,\r\n        pollingInterval\r\n      });\r\n    },\r\n    webSocketProvider: ({ chainId }) => {\r\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\r\n      const chainWebSocketProviders = webSocketProviders_[activeChain.id];\r\n      if (!chainWebSocketProviders)\r\n        return void 0;\r\n      const provider = chainWebSocketProviders[0]?.();\r\n      if (provider && activeChain.id === 42220) {\r\n        provider.formatter.formats.block = {\r\n          ...provider.formatter.formats.block,\r\n          difficulty: () => 0,\r\n          gasLimit: () => 0\r\n        };\r\n      }\r\n      return Object.assign(provider || {}, {\r\n        chains\r\n      });\r\n    }\r\n  };\r\n}\r\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, { stallTimeout }) {\r\n  try {\r\n    return new providers.FallbackProvider(\r\n      providers_.map((chainProvider, index) => {\r\n        const provider = chainProvider();\r\n        return {\r\n          provider,\r\n          priority: provider.priority ?? index,\r\n          stallTimeout: provider.stallTimeout ?? stallTimeout,\r\n          weight: provider.weight\r\n        };\r\n      }),\r\n      targetQuorum\r\n    );\r\n  } catch (error) {\r\n    if (error?.message?.includes(\r\n      \"quorum will always fail; larger than total weight\"\r\n    )) {\r\n      if (targetQuorum === minQuorum)\r\n        throw error;\r\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\r\n        stallTimeout\r\n      });\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n// src/client.ts\r\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\r\nimport { createStore } from \"zustand/vanilla\";\r\n\r\n// src/utils/assertActiveChain.ts\r\nfunction assertActiveChain({\r\n  chainId,\r\n  signer\r\n}) {\r\n  const { chain: activeChain, chains } = getNetwork();\r\n  const activeChainId = activeChain?.id;\r\n  if (activeChainId && chainId !== activeChainId) {\r\n    throw new ChainMismatchError({\r\n      activeChain: chains.find((x) => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\r\n      targetChain: chains.find((x) => x.id === chainId)?.name ?? `Chain ${chainId}`\r\n    });\r\n  }\r\n  if (signer) {\r\n    const signerChainId = signer.provider?.network?.chainId;\r\n    if (signerChainId && chainId !== signerChainId) {\r\n      const connector = getClient().connector;\r\n      throw new ChainNotConfiguredError({\r\n        chainId,\r\n        connectorId: connector?.id ?? \"unknown\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// src/utils/debounce.ts\r\nfunction debounce(fn, waitTime = 0) {\r\n  let timeout;\r\n  return function(...args) {\r\n    if (!waitTime)\r\n      return fn(...args);\r\n    if (timeout)\r\n      clearTimeout(timeout);\r\n    timeout = setTimeout(function() {\r\n      timeout = null;\r\n      fn(...args);\r\n    }, waitTime);\r\n  };\r\n}\r\n\r\n// src/utils/deepEqual.ts\r\nfunction deepEqual(a, b) {\r\n  if (a === b)\r\n    return true;\r\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\r\n    if (a.constructor !== b.constructor)\r\n      return false;\r\n    let length;\r\n    let i;\r\n    if (Array.isArray(a) && Array.isArray(b)) {\r\n      length = a.length;\r\n      if (length != b.length)\r\n        return false;\r\n      for (i = length; i-- !== 0; )\r\n        if (!deepEqual(a[i], b[i]))\r\n          return false;\r\n      return true;\r\n    }\r\n    if (a.valueOf !== Object.prototype.valueOf)\r\n      return a.valueOf() === b.valueOf();\r\n    if (a.toString !== Object.prototype.toString)\r\n      return a.toString() === b.toString();\r\n    const keys = Object.keys(a);\r\n    length = keys.length;\r\n    if (length !== Object.keys(b).length)\r\n      return false;\r\n    for (i = length; i-- !== 0; )\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\r\n        return false;\r\n    for (i = length; i-- !== 0; ) {\r\n      const key = keys[i];\r\n      if (key && !deepEqual(a[key], b[key]))\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n  return a !== a && b !== b;\r\n}\r\n\r\n// src/utils/deserialize.ts\r\nimport { BigNumber } from \"ethers\";\r\nvar findAndReplace = (cacheRef, {\r\n  find,\r\n  replace\r\n}) => {\r\n  if (cacheRef && find(cacheRef)) {\r\n    return replace(cacheRef);\r\n  }\r\n  if (typeof cacheRef !== \"object\") {\r\n    return cacheRef;\r\n  }\r\n  if (Array.isArray(cacheRef)) {\r\n    return cacheRef.map((item) => findAndReplace(item, { find, replace }));\r\n  }\r\n  if (cacheRef instanceof Object) {\r\n    return Object.entries(cacheRef).reduce(\r\n      (curr, [key, value]) => ({\r\n        ...curr,\r\n        [key]: findAndReplace(value, { find, replace })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n  return cacheRef;\r\n};\r\nfunction deserialize(cachedString) {\r\n  const cache = JSON.parse(cachedString);\r\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\r\n    find: (data) => data.type === \"BigNumber\",\r\n    replace: (data) => BigNumber.from(data.hex)\r\n  });\r\n  return deserializedCacheWithBigNumbers;\r\n}\r\n\r\n// src/utils/normalizeFunctionName.ts\r\nimport { BigNumber as BigNumber2 } from \"ethers\";\r\nimport { FunctionFragment, isAddress } from \"ethers/lib/utils.js\";\r\nfunction normalizeFunctionName({\r\n  contract,\r\n  functionName,\r\n  args = []\r\n}) {\r\n  if (functionName in contract.functions)\r\n    return functionName;\r\n  const argsLength = args?.length ?? 0;\r\n  const overloadFunctions = Object.keys(contract.functions).filter((x) => x.startsWith(`${functionName}(`)).map((x) => ({ name: x, fragment: FunctionFragment.fromString(x) })).filter((x) => argsLength === x.fragment.inputs.length);\r\n  for (const overloadFunction of overloadFunctions) {\r\n    const matched = args.every((arg, index) => {\r\n      const abiParameter = overloadFunction.fragment.inputs[index];\r\n      return isArgOfType(arg, abiParameter);\r\n    });\r\n    if (matched)\r\n      return overloadFunction.name;\r\n  }\r\n  return functionName;\r\n}\r\nfunction isArgOfType(arg, abiParameter) {\r\n  const argType = typeof arg;\r\n  const abiParameterType = abiParameter.type;\r\n  switch (abiParameterType) {\r\n    case \"address\":\r\n      return isAddress(arg);\r\n    case \"bool\":\r\n      return argType === \"boolean\";\r\n    case \"function\":\r\n      return argType === \"string\";\r\n    case \"string\":\r\n      return argType === \"string\";\r\n    default: {\r\n      if (abiParameterType === \"tuple\" && \"components\" in abiParameter)\r\n        return Object.values(abiParameter.components).every(\r\n          (component, index) => {\r\n            return isArgOfType(\r\n              Object.values(arg)[index],\r\n              component\r\n            );\r\n          }\r\n        );\r\n      if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\r\n        abiParameterType\r\n      ))\r\n        return argType === \"number\" || argType === \"bigint\" || BigNumber2.isBigNumber(arg);\r\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\r\n        return argType === \"string\" || arg instanceof Uint8Array;\r\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\r\n        return Array.isArray(arg) && arg.every(\r\n          (x) => isArgOfType(x, {\r\n            ...abiParameter,\r\n            type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, \"\")\r\n          })\r\n        );\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// src/utils/logger.ts\r\nfunction logWarn(message) {\r\n  getClient()?.config.logger?.warn?.(message);\r\n}\r\n\r\n// src/utils/minimizeContractInterface.ts\r\nimport { Contract } from \"ethers\";\r\nimport { FormatTypes } from \"ethers/lib/utils.js\";\r\nfunction minimizeContractInterface(config) {\r\n  try {\r\n    const minimizedAbi = config.abi.filter(\r\n      (x) => x.type === \"function\" && x.name === config.functionName\r\n    );\r\n    if (minimizedAbi.length === 0)\r\n      throw new Error(\"Invalid ABI\");\r\n    return minimizedAbi;\r\n  } catch (error) {\r\n    const abi = Contract.getInterface(config.abi).format(\r\n      FormatTypes.full\r\n    );\r\n    const minimizedInterface = Array.isArray(abi) ? abi : [abi];\r\n    return minimizedInterface.filter((i) => i.includes(config.functionName));\r\n  }\r\n}\r\n\r\n// src/utils/normalizeChainId.ts\r\nfunction normalizeChainId(chainId) {\r\n  if (typeof chainId === \"string\")\r\n    return Number.parseInt(\r\n      chainId,\r\n      chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10\r\n    );\r\n  if (typeof chainId === \"bigint\")\r\n    return Number(chainId);\r\n  return chainId;\r\n}\r\n\r\n// src/utils/parseContractResult.ts\r\nimport { Contract as Contract2 } from \"ethers\";\r\nfunction isPlainArray(value) {\r\n  return Array.isArray(value) && Object.keys(value).length === value.length;\r\n}\r\nfunction parseContractResult({\r\n  abi,\r\n  data,\r\n  functionName\r\n}) {\r\n  if (data && isPlainArray(data)) {\r\n    const iface = Contract2.getInterface(abi);\r\n    const fragment = iface.getFunction(functionName);\r\n    const isTuple = (fragment.outputs?.length || 0) > 1;\r\n    const data_ = isTuple ? data : [data];\r\n    const encodedResult = iface.encodeFunctionResult(functionName, data_);\r\n    const decodedResult = iface.decodeFunctionResult(\r\n      functionName,\r\n      encodedResult\r\n    );\r\n    return isTuple ? decodedResult : decodedResult[0];\r\n  }\r\n  return data;\r\n}\r\n\r\n// src/utils/serialize.ts\r\nfunction getReferenceKey(keys, cutoff) {\r\n  return keys.slice(0, cutoff).join(\".\") || \".\";\r\n}\r\nfunction getCutoff(array, value) {\r\n  const { length } = array;\r\n  for (let index = 0; index < length; ++index) {\r\n    if (array[index] === value) {\r\n      return index + 1;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\nfunction createReplacer(replacer, circularReplacer) {\r\n  const hasReplacer = typeof replacer === \"function\";\r\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\r\n  const cache = [];\r\n  const keys = [];\r\n  return function replace(key, value) {\r\n    if (typeof value === \"object\") {\r\n      if (cache.length) {\r\n        const thisCutoff = getCutoff(cache, this);\r\n        if (thisCutoff === 0) {\r\n          cache[cache.length] = this;\r\n        } else {\r\n          cache.splice(thisCutoff);\r\n          keys.splice(thisCutoff);\r\n        }\r\n        keys[keys.length] = key;\r\n        const valueCutoff = getCutoff(cache, value);\r\n        if (valueCutoff !== 0) {\r\n          return hasCircularReplacer ? circularReplacer.call(\r\n            this,\r\n            key,\r\n            value,\r\n            getReferenceKey(keys, valueCutoff)\r\n          ) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\r\n        }\r\n      } else {\r\n        cache[0] = value;\r\n        keys[0] = key;\r\n      }\r\n    }\r\n    return hasReplacer ? replacer.call(this, key, value) : value;\r\n  };\r\n}\r\nfunction serialize(value, replacer, indent, circularReplacer) {\r\n  return JSON.stringify(\r\n    value,\r\n    createReplacer(replacer, circularReplacer),\r\n    indent ?? void 0\r\n  );\r\n}\r\n\r\n// src/storage.ts\r\nvar noopStorage = {\r\n  getItem: (_key) => \"\",\r\n  setItem: (_key, _value) => null,\r\n  removeItem: (_key) => null\r\n};\r\nfunction createStorage({\r\n  deserialize: deserialize2 = deserialize,\r\n  key: prefix = \"wagmi\",\r\n  serialize: serialize2 = serialize,\r\n  storage\r\n}) {\r\n  return {\r\n    ...storage,\r\n    getItem: (key, defaultState = null) => {\r\n      const value = storage.getItem(`${prefix}.${key}`);\r\n      try {\r\n        return value ? deserialize2(value) : defaultState;\r\n      } catch (error) {\r\n        console.warn(error);\r\n        return defaultState;\r\n      }\r\n    },\r\n    setItem: (key, value) => {\r\n      if (value === null) {\r\n        storage.removeItem(`${prefix}.${key}`);\r\n      } else {\r\n        try {\r\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      }\r\n    },\r\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\r\n  };\r\n}\r\n\r\n// src/client.ts\r\nvar storeKey = \"store\";\r\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\r\nvar Client = class {\r\n  constructor({\r\n    autoConnect = false,\r\n    connectors = [new InjectedConnector()],\r\n    provider,\r\n    storage = createStorage({\r\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\r\n    }),\r\n    logger = {\r\n      warn: console.warn\r\n    },\r\n    webSocketProvider\r\n  }) {\r\n    __privateAdd(this, _addEffects);\r\n    this.providers = /* @__PURE__ */ new Map();\r\n    this.webSocketProviders = /* @__PURE__ */ new Map();\r\n    __privateAdd(this, _isAutoConnecting, void 0);\r\n    __privateAdd(this, _lastUsedConnector, void 0);\r\n    this.config = {\r\n      autoConnect,\r\n      connectors,\r\n      logger,\r\n      provider,\r\n      storage,\r\n      webSocketProvider\r\n    };\r\n    let status = \"disconnected\";\r\n    let chainId;\r\n    if (autoConnect) {\r\n      try {\r\n        const rawState = storage.getItem(storeKey);\r\n        const data = rawState?.state?.data;\r\n        status = data?.account ? \"reconnecting\" : \"connecting\";\r\n        chainId = data?.chain?.id;\r\n      } catch (_error) {\r\n      }\r\n    }\r\n    this.store = createStore(\r\n      subscribeWithSelector(\r\n        persist(\r\n          () => ({\r\n            connectors: typeof connectors === \"function\" ? connectors() : connectors,\r\n            provider: this.getProvider({ chainId }),\r\n            status,\r\n            webSocketProvider: this.getWebSocketProvider({ chainId })\r\n          }),\r\n          {\r\n            name: storeKey,\r\n            storage,\r\n            partialize: (state) => ({\r\n              ...autoConnect && {\r\n                data: {\r\n                  account: state?.data?.account,\r\n                  chain: state?.data?.chain\r\n                }\r\n              },\r\n              chains: state?.chains\r\n            }),\r\n            version: 2\r\n          }\r\n        )\r\n      )\r\n    );\r\n    this.storage = storage;\r\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\r\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\r\n    if (autoConnect && typeof window !== \"undefined\")\r\n      setTimeout(async () => await this.autoConnect(), 0);\r\n  }\r\n  get chains() {\r\n    return this.store.getState().chains;\r\n  }\r\n  get connectors() {\r\n    return this.store.getState().connectors;\r\n  }\r\n  get connector() {\r\n    return this.store.getState().connector;\r\n  }\r\n  get data() {\r\n    return this.store.getState().data;\r\n  }\r\n  get error() {\r\n    return this.store.getState().error;\r\n  }\r\n  get lastUsedChainId() {\r\n    return this.data?.chain?.id;\r\n  }\r\n  get provider() {\r\n    return this.store.getState().provider;\r\n  }\r\n  get status() {\r\n    return this.store.getState().status;\r\n  }\r\n  get subscribe() {\r\n    return this.store.subscribe;\r\n  }\r\n  get webSocketProvider() {\r\n    return this.store.getState().webSocketProvider;\r\n  }\r\n  setState(updater) {\r\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\r\n    this.store.setState(newState, true);\r\n  }\r\n  clearState() {\r\n    this.setState((x) => ({\r\n      ...x,\r\n      chains: void 0,\r\n      connector: void 0,\r\n      data: void 0,\r\n      error: void 0,\r\n      status: \"disconnected\"\r\n    }));\r\n  }\r\n  async destroy() {\r\n    if (this.connector)\r\n      await this.connector.disconnect?.();\r\n    __privateSet(this, _isAutoConnecting, false);\r\n    this.clearState();\r\n    this.store.destroy();\r\n  }\r\n  async autoConnect() {\r\n    if (__privateGet(this, _isAutoConnecting))\r\n      return;\r\n    __privateSet(this, _isAutoConnecting, true);\r\n    this.setState((x) => ({\r\n      ...x,\r\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\r\n    }));\r\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(\r\n      (x) => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1\r\n    ) : this.connectors;\r\n    let connected = false;\r\n    for (const connector of sorted) {\r\n      if (!connector.ready || !connector.isAuthorized)\r\n        continue;\r\n      const isAuthorized = await connector.isAuthorized();\r\n      if (!isAuthorized)\r\n        continue;\r\n      const data = await connector.connect();\r\n      this.setState((x) => ({\r\n        ...x,\r\n        connector,\r\n        chains: connector?.chains,\r\n        data,\r\n        status: \"connected\"\r\n      }));\r\n      connected = true;\r\n      break;\r\n    }\r\n    if (!connected)\r\n      this.setState((x) => ({\r\n        ...x,\r\n        data: void 0,\r\n        status: \"disconnected\"\r\n      }));\r\n    __privateSet(this, _isAutoConnecting, false);\r\n    return this.data;\r\n  }\r\n  getProvider({ bust, chainId } = {}) {\r\n    let provider_ = this.providers.get(chainId ?? -1);\r\n    if (provider_ && !bust)\r\n      return provider_;\r\n    const { provider } = this.config;\r\n    provider_ = typeof provider === \"function\" ? provider({ chainId }) : provider;\r\n    this.providers.set(chainId ?? -1, provider_);\r\n    return provider_;\r\n  }\r\n  getWebSocketProvider({\r\n    bust,\r\n    chainId\r\n  } = {}) {\r\n    let webSocketProvider_ = this.webSocketProviders.get(chainId ?? -1);\r\n    if (webSocketProvider_ && !bust)\r\n      return webSocketProvider_;\r\n    const { webSocketProvider } = this.config;\r\n    webSocketProvider_ = typeof webSocketProvider === \"function\" ? webSocketProvider({ chainId }) : webSocketProvider;\r\n    if (webSocketProvider_)\r\n      this.webSocketProviders.set(chainId ?? -1, webSocketProvider_);\r\n    return webSocketProvider_;\r\n  }\r\n  setLastUsedConnector(lastUsedConnector = null) {\r\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\r\n  }\r\n};\r\n_isAutoConnecting = new WeakMap();\r\n_lastUsedConnector = new WeakMap();\r\n_addEffects = new WeakSet();\r\naddEffects_fn = function() {\r\n  const onChange = (data) => {\r\n    this.setState((x) => ({\r\n      ...x,\r\n      data: { ...x.data, ...data }\r\n    }));\r\n  };\r\n  const onDisconnect = () => {\r\n    this.clearState();\r\n  };\r\n  const onError = (error) => {\r\n    this.setState((x) => ({ ...x, error }));\r\n  };\r\n  this.store.subscribe(\r\n    ({ connector }) => connector,\r\n    (connector, prevConnector) => {\r\n      prevConnector?.off?.(\"change\", onChange);\r\n      prevConnector?.off?.(\"disconnect\", onDisconnect);\r\n      prevConnector?.off?.(\"error\", onError);\r\n      if (!connector)\r\n        return;\r\n      connector.on?.(\"change\", onChange);\r\n      connector.on?.(\"disconnect\", onDisconnect);\r\n      connector.on?.(\"error\", onError);\r\n    }\r\n  );\r\n  const { provider, webSocketProvider } = this.config;\r\n  const subscribeProvider = typeof provider === \"function\";\r\n  const subscribeWebSocketProvider = typeof webSocketProvider === \"function\";\r\n  if (subscribeProvider || subscribeWebSocketProvider)\r\n    this.store.subscribe(\r\n      ({ data }) => data?.chain?.id,\r\n      (chainId) => {\r\n        this.setState((x) => ({\r\n          ...x,\r\n          provider: this.getProvider({ bust: true, chainId }),\r\n          webSocketProvider: this.getWebSocketProvider({\r\n            bust: true,\r\n            chainId\r\n          })\r\n        }));\r\n      }\r\n    );\r\n};\r\nvar client;\r\nfunction createClient(config) {\r\n  const client_ = new Client(config);\r\n  client = client_;\r\n  return client_;\r\n}\r\nfunction getClient() {\r\n  if (!client) {\r\n    throw new Error(\r\n      \"No wagmi client found. Ensure you have set up a client: https://wagmi.sh/react/client\"\r\n    );\r\n  }\r\n  return client;\r\n}\r\n\r\n// src/actions/accounts/connect.ts\r\nasync function connect({\r\n  chainId,\r\n  connector\r\n}) {\r\n  const client2 = getClient();\r\n  const activeConnector = client2.connector;\r\n  if (activeConnector && connector.id === activeConnector.id)\r\n    throw new ConnectorAlreadyConnectedError();\r\n  try {\r\n    client2.setState((x) => ({ ...x, status: \"connecting\" }));\r\n    const data = await connector.connect({ chainId });\r\n    client2.setLastUsedConnector(connector.id);\r\n    client2.setState((x) => ({\r\n      ...x,\r\n      connector,\r\n      chains: connector?.chains,\r\n      data,\r\n      status: \"connected\"\r\n    }));\r\n    client2.storage.setItem(\"connected\", true);\r\n    return { ...data, connector };\r\n  } catch (err) {\r\n    client2.setState((x) => {\r\n      return {\r\n        ...x,\r\n        status: x.connector ? \"connected\" : \"disconnected\"\r\n      };\r\n    });\r\n    throw err;\r\n  }\r\n}\r\n\r\n// src/actions/accounts/disconnect.ts\r\nasync function disconnect() {\r\n  const client2 = getClient();\r\n  if (client2.connector)\r\n    await client2.connector.disconnect();\r\n  client2.clearState();\r\n  client2.storage.removeItem(\"connected\");\r\n}\r\n\r\n// src/actions/accounts/fetchBalance.ts\r\nimport { formatUnits as formatUnits3, parseBytes32String as parseBytes32String2 } from \"ethers/lib/utils.js\";\r\n\r\n// src/constants/abis.ts\r\nvar erc20ABI = [\r\n  {\r\n    type: \"event\",\r\n    name: \"Approval\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"event\",\r\n    name: \"Transfer\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"allowance\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"approve\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"balanceOf\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"account\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"decimals\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint8\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"name\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"symbol\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"totalSupply\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transfer\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transferFrom\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  }\r\n];\r\nvar erc20ABI_bytes32 = [\r\n  {\r\n    type: \"event\",\r\n    name: \"Approval\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"event\",\r\n    name: \"Transfer\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"allowance\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"approve\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"balanceOf\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"account\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"decimals\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint8\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"name\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bytes32\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"symbol\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bytes32\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"totalSupply\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transfer\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transferFrom\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  }\r\n];\r\nvar erc721ABI = [\r\n  {\r\n    type: \"event\",\r\n    name: \"Approval\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"event\",\r\n    name: \"ApprovalForAll\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"operator\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"approved\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"event\",\r\n    name: \"Transfer\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"approve\",\r\n    stateMutability: \"payable\",\r\n    inputs: [\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"balanceOf\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"account\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"getApproved\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"address\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"isApprovedForAll\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"operator\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"name\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"ownerOf\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"safeTransferFrom\",\r\n    stateMutability: \"payable\",\r\n    inputs: [\r\n      {\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"safeTransferFrom\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"id\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"data\",\r\n        type: \"bytes\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"setApprovalForAll\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"operator\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"approved\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"symbol\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"tokenByIndex\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"index\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"tokenByIndex\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"index\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"tokenURI\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"totalSupply\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transferFrom\",\r\n    stateMutability: \"payable\",\r\n    inputs: [\r\n      {\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"tokeId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  }\r\n];\r\nvar multicallABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            name: \"target\",\r\n            type: \"address\"\r\n          },\r\n          {\r\n            name: \"allowFailure\",\r\n            type: \"bool\"\r\n          },\r\n          {\r\n            name: \"callData\",\r\n            type: \"bytes\"\r\n          }\r\n        ],\r\n        name: \"calls\",\r\n        type: \"tuple[]\"\r\n      }\r\n    ],\r\n    name: \"aggregate3\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            name: \"success\",\r\n            type: \"bool\"\r\n          },\r\n          {\r\n            name: \"returnData\",\r\n            type: \"bytes\"\r\n          }\r\n        ],\r\n        name: \"returnData\",\r\n        type: \"tuple[]\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  }\r\n];\r\nvar erc4626ABI = [\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"Deposit\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"Withdraw\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"asset\",\r\n    outputs: [\r\n      {\r\n        name: \"assetTokenAddress\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"account\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"convertToAssets\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"convertToShares\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"deposit\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"caller\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"maxDeposit\",\r\n    outputs: [\r\n      {\r\n        name: \"maxAssets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"caller\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"maxMint\",\r\n    outputs: [\r\n      {\r\n        name: \"maxShares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"maxRedeem\",\r\n    outputs: [\r\n      {\r\n        name: \"maxShares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"maxWithdraw\",\r\n    outputs: [\r\n      {\r\n        name: \"maxAssets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"mint\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"previewDeposit\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"previewMint\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"previewRedeem\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"previewWithdraw\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"redeem\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalAssets\",\r\n    outputs: [\r\n      {\r\n        name: \"totalManagedAssets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"transfer\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"withdraw\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  }\r\n];\r\n\r\n// src/constants/units.ts\r\nvar units = [\r\n  \"wei\",\r\n  \"kwei\",\r\n  \"mwei\",\r\n  \"gwei\",\r\n  \"szabo\",\r\n  \"finney\",\r\n  \"ether\"\r\n];\r\n\r\n// src/actions/contracts/fetchToken.ts\r\nimport { formatUnits, parseBytes32String } from \"ethers/lib/utils.js\";\r\nasync function fetchToken({\r\n  address,\r\n  chainId,\r\n  formatUnits: units2 = \"ether\"\r\n}) {\r\n  async function fetchToken_({ abi }) {\r\n    const erc20Config = { address, abi, chainId };\r\n    const [decimals, name, symbol, totalSupply] = await readContracts({\r\n      allowFailure: false,\r\n      contracts: [\r\n        { ...erc20Config, functionName: \"decimals\" },\r\n        { ...erc20Config, functionName: \"name\" },\r\n        { ...erc20Config, functionName: \"symbol\" },\r\n        { ...erc20Config, functionName: \"totalSupply\" }\r\n      ]\r\n    });\r\n    return {\r\n      address,\r\n      decimals,\r\n      name,\r\n      symbol,\r\n      totalSupply: {\r\n        formatted: formatUnits(totalSupply, units2),\r\n        value: totalSupply\r\n      }\r\n    };\r\n  }\r\n  try {\r\n    return await fetchToken_({ abi: erc20ABI });\r\n  } catch (err) {\r\n    if (err instanceof ContractResultDecodeError) {\r\n      const { name, symbol, ...rest } = await fetchToken_({\r\n        abi: erc20ABI_bytes32\r\n      });\r\n      return {\r\n        name: parseBytes32String(name),\r\n        symbol: parseBytes32String(symbol),\r\n        ...rest\r\n      };\r\n    }\r\n    throw err;\r\n  }\r\n}\r\n\r\n// src/actions/contracts/getContract.ts\r\nimport { Contract as EthersContract } from \"ethers\";\r\nfunction getContract({\r\n  address,\r\n  abi,\r\n  signerOrProvider\r\n}) {\r\n  return new EthersContract(\r\n    address,\r\n    abi,\r\n    signerOrProvider\r\n  );\r\n}\r\n\r\n// src/actions/contracts/prepareWriteContract.ts\r\nasync function prepareWriteContract({\r\n  abi,\r\n  address,\r\n  chainId,\r\n  functionName,\r\n  overrides,\r\n  signer: signer_,\r\n  ...config\r\n}) {\r\n  const signer = signer_ ?? await fetchSigner({ chainId });\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  if (chainId)\r\n    assertActiveChain({ chainId, signer });\r\n  const contract = getContract({\r\n    address,\r\n    abi,\r\n    signerOrProvider: signer\r\n  });\r\n  const args = config.args;\r\n  const normalizedFunctionName = normalizeFunctionName({\r\n    contract,\r\n    functionName,\r\n    args\r\n  });\r\n  const populateTransactionFn = contract.populateTransaction[normalizedFunctionName];\r\n  if (!populateTransactionFn)\r\n    throw new ContractMethodDoesNotExistError({\r\n      address,\r\n      functionName: normalizedFunctionName\r\n    });\r\n  const params = [...args ?? [], ...overrides ? [overrides] : []];\r\n  const unsignedTransaction = await populateTransactionFn(\r\n    ...params\r\n  );\r\n  const gasLimit = unsignedTransaction.gasLimit || await signer.estimateGas(unsignedTransaction);\r\n  const minimizedAbi = minimizeContractInterface({\r\n    abi,\r\n    functionName\r\n  });\r\n  return {\r\n    abi: minimizedAbi,\r\n    address,\r\n    chainId,\r\n    functionName,\r\n    mode: \"prepared\",\r\n    request: {\r\n      ...unsignedTransaction,\r\n      gasLimit\r\n    }\r\n  };\r\n}\r\n\r\n// src/actions/providers/getProvider.ts\r\nfunction getProvider({\r\n  chainId\r\n} = {}) {\r\n  const client2 = getClient();\r\n  if (chainId)\r\n    return client2.getProvider({ chainId }) || client2.provider;\r\n  return client2.provider;\r\n}\r\n\r\n// src/actions/providers/getWebSocketProvider.ts\r\nfunction getWebSocketProvider({\r\n  chainId\r\n} = {}) {\r\n  const client2 = getClient();\r\n  if (chainId)\r\n    return client2.getWebSocketProvider({ chainId }) || client2.webSocketProvider;\r\n  return client2.webSocketProvider;\r\n}\r\n\r\n// src/actions/providers/watchProvider.ts\r\nfunction watchProvider(args, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(getProvider(args));\r\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\r\n  return unsubscribe;\r\n}\r\n\r\n// src/actions/providers/watchWebSocketProvider.ts\r\nfunction watchWebSocketProvider(args, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(getWebSocketProvider(args));\r\n  const unsubscribe = client2.subscribe(\r\n    ({ webSocketProvider }) => webSocketProvider,\r\n    handleChange\r\n  );\r\n  return unsubscribe;\r\n}\r\n\r\n// src/actions/contracts/multicall.ts\r\nasync function multicall({\r\n  allowFailure = true,\r\n  chainId,\r\n  contracts,\r\n  overrides\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  if (!provider.chains)\r\n    throw new ProviderChainsNotFound();\r\n  const chain = provider.chains.find((chain2) => chain2.id === chainId) || provider.chains[0];\r\n  if (!chain)\r\n    throw new ProviderChainsNotFound();\r\n  if (!chain?.contracts?.multicall3)\r\n    throw new ChainDoesNotSupportMulticallError({ chain });\r\n  if (typeof overrides?.blockTag === \"number\" && overrides?.blockTag < (chain.contracts.multicall3.blockCreated ?? 0))\r\n    throw new ChainDoesNotSupportMulticallError({\r\n      blockNumber: overrides?.blockTag,\r\n      chain\r\n    });\r\n  const multicallContract = getContract({\r\n    address: chain.contracts.multicall3.address,\r\n    abi: multicallABI,\r\n    signerOrProvider: provider\r\n  });\r\n  const calls = contracts.map(\r\n    ({ address, abi, functionName, ...config }) => {\r\n      const { args } = config || {};\r\n      const contract = getContract({ address, abi });\r\n      const params2 = args ?? [];\r\n      const normalizedFunctionName = normalizeFunctionName({\r\n        contract,\r\n        functionName,\r\n        args\r\n      });\r\n      try {\r\n        const contractFunction = contract[normalizedFunctionName];\r\n        if (!contractFunction)\r\n          logWarn(\r\n            `\"${normalizedFunctionName}\" is not in the interface for contract \"${address}\"`\r\n          );\r\n        const callData = contract.interface.encodeFunctionData(\r\n          normalizedFunctionName,\r\n          params2\r\n        );\r\n        return {\r\n          target: address,\r\n          allowFailure,\r\n          callData\r\n        };\r\n      } catch (err) {\r\n        if (!allowFailure)\r\n          throw err;\r\n        return {\r\n          target: address,\r\n          allowFailure,\r\n          callData: \"0x\"\r\n        };\r\n      }\r\n    }\r\n  );\r\n  const params = [...[calls], ...overrides ? [overrides] : []];\r\n  const results = await multicallContract.aggregate3(\r\n    ...params\r\n  );\r\n  return results.map(({ returnData, success }, i) => {\r\n    const { address, abi, functionName, ...rest } = contracts[i];\r\n    const contract = getContract({\r\n      address,\r\n      abi\r\n    });\r\n    const args = rest.args;\r\n    const normalizedFunctionName = normalizeFunctionName({\r\n      contract,\r\n      functionName,\r\n      args\r\n    });\r\n    if (!success) {\r\n      let error;\r\n      try {\r\n        contract.interface.decodeFunctionResult(\r\n          normalizedFunctionName,\r\n          returnData\r\n        );\r\n      } catch (err) {\r\n        error = new ContractMethodRevertedError({\r\n          address,\r\n          args,\r\n          chainId: chain.id,\r\n          functionName: normalizedFunctionName,\r\n          errorMessage: err.message\r\n        });\r\n        if (!allowFailure)\r\n          throw error;\r\n        logWarn(error.message);\r\n      }\r\n      return null;\r\n    }\r\n    if (returnData === \"0x\") {\r\n      const error = new ContractMethodNoResultError({\r\n        address,\r\n        args,\r\n        chainId: chain.id,\r\n        functionName: normalizedFunctionName\r\n      });\r\n      if (!allowFailure)\r\n        throw error;\r\n      logWarn(error.message);\r\n      return null;\r\n    }\r\n    try {\r\n      const result = contract.interface.decodeFunctionResult(\r\n        normalizedFunctionName,\r\n        returnData\r\n      );\r\n      return Array.isArray(result) && result.length === 1 ? result[0] : result;\r\n    } catch (err) {\r\n      const error = new ContractResultDecodeError({\r\n        address,\r\n        args,\r\n        chainId: chain.id,\r\n        functionName: normalizedFunctionName,\r\n        errorMessage: err.message\r\n      });\r\n      if (!allowFailure)\r\n        throw error;\r\n      logWarn(error.message);\r\n      return null;\r\n    }\r\n  });\r\n}\r\n\r\n// src/actions/contracts/readContract.ts\r\nasync function readContract({\r\n  address,\r\n  chainId,\r\n  abi,\r\n  functionName,\r\n  overrides,\r\n  ...config\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const contract = getContract({\r\n    address,\r\n    abi,\r\n    signerOrProvider: provider\r\n  });\r\n  const args = config.args;\r\n  const normalizedFunctionName = normalizeFunctionName({\r\n    contract,\r\n    functionName,\r\n    args\r\n  });\r\n  const contractFunction = contract[normalizedFunctionName];\r\n  if (!contractFunction)\r\n    throw new ContractMethodDoesNotExistError({\r\n      address,\r\n      functionName: normalizedFunctionName\r\n    });\r\n  const params = [...args ?? [], ...overrides ? [overrides] : []];\r\n  return contractFunction?.(...params);\r\n}\r\n\r\n// src/actions/contracts/readContracts.ts\r\nasync function readContracts({\r\n  allowFailure = true,\r\n  contracts,\r\n  overrides\r\n}) {\r\n  try {\r\n    const provider = getProvider();\r\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\r\n      const chainId = contract.chainId ?? provider.network.chainId;\r\n      return {\r\n        ...contracts2,\r\n        [chainId]: [...contracts2[chainId] || [], { contract, index }]\r\n      };\r\n    }, {});\r\n    const promises = () => Object.entries(contractsByChainId).map(\r\n      ([chainId, contracts2]) => multicall({\r\n        allowFailure,\r\n        chainId: parseInt(chainId),\r\n        contracts: contracts2.map(({ contract }) => contract),\r\n        overrides\r\n      })\r\n    );\r\n    let multicallResults;\r\n    if (allowFailure) {\r\n      multicallResults = (await Promise.allSettled(promises())).map((result) => {\r\n        if (result.status === \"fulfilled\")\r\n          return result.value;\r\n        if (result.reason instanceof ChainDoesNotSupportMulticallError) {\r\n          logWarn(result.reason.message);\r\n          throw result.reason;\r\n        }\r\n        return null;\r\n      }).flat();\r\n    } else {\r\n      multicallResults = (await Promise.all(promises())).flat();\r\n    }\r\n    const resultIndexes = Object.values(contractsByChainId).map((contracts2) => contracts2.map(({ index }) => index)).flat();\r\n    return multicallResults.reduce((results, result, index) => {\r\n      if (results)\r\n        results[resultIndexes[index]] = result;\r\n      return results;\r\n    }, []);\r\n  } catch (err) {\r\n    if (err instanceof ContractResultDecodeError)\r\n      throw err;\r\n    if (err instanceof ContractMethodNoResultError)\r\n      throw err;\r\n    if (err instanceof ContractMethodRevertedError)\r\n      throw err;\r\n    const promises = () => contracts.map(\r\n      (contract) => readContract({ ...contract, overrides })\r\n    );\r\n    if (allowFailure)\r\n      return (await Promise.allSettled(promises())).map((result, i) => {\r\n        if (result.status === \"fulfilled\")\r\n          return result.value;\r\n        const { address, args, chainId, functionName } = contracts[i];\r\n        const error = new ContractMethodRevertedError({\r\n          address,\r\n          functionName,\r\n          chainId: chainId ?? 1,\r\n          args,\r\n          errorMessage: result.reason\r\n        });\r\n        logWarn(error.message);\r\n        return null;\r\n      });\r\n    return await Promise.all(promises());\r\n  }\r\n}\r\n\r\n// src/actions/contracts/watchContractEvent.ts\r\nimport { shallow } from \"zustand/shallow\";\r\nfunction watchContractEvent({\r\n  address,\r\n  abi,\r\n  chainId,\r\n  eventName,\r\n  once\r\n}, callback) {\r\n  const handler = (...event) => callback(...event);\r\n  let contract;\r\n  const watchEvent = async () => {\r\n    if (contract)\r\n      contract?.off(eventName, handler);\r\n    const signerOrProvider = getWebSocketProvider({ chainId }) || getProvider({ chainId });\r\n    contract = getContract({\r\n      address,\r\n      abi,\r\n      signerOrProvider\r\n    });\r\n    if (once)\r\n      contract.once(eventName, handler);\r\n    else\r\n      contract.on(eventName, handler);\r\n  };\r\n  watchEvent();\r\n  const client2 = getClient();\r\n  const unsubscribe = client2.subscribe(\r\n    ({ provider, webSocketProvider }) => ({\r\n      provider,\r\n      webSocketProvider\r\n    }),\r\n    watchEvent,\r\n    { equalityFn: shallow }\r\n  );\r\n  return () => {\r\n    contract?.off(eventName, handler);\r\n    unsubscribe();\r\n  };\r\n}\r\n\r\n// src/actions/network-status/watchBlockNumber.ts\r\nimport { shallow as shallow2 } from \"zustand/shallow\";\r\n\r\n// src/actions/network-status/fetchBlockNumber.ts\r\nasync function fetchBlockNumber({\r\n  chainId\r\n} = {}) {\r\n  const provider = getProvider({ chainId });\r\n  const blockNumber = await provider.getBlockNumber();\r\n  return blockNumber;\r\n}\r\n\r\n// src/actions/network-status/watchBlockNumber.ts\r\nfunction watchBlockNumber(args, callback) {\r\n  const debouncedCallback = debounce(callback, 1);\r\n  let previousProvider;\r\n  const createListener = (provider) => {\r\n    if (previousProvider) {\r\n      previousProvider?.off(\"block\", debouncedCallback);\r\n    }\r\n    provider.on(\"block\", debouncedCallback);\r\n    previousProvider = provider;\r\n  };\r\n  const provider_ = getWebSocketProvider({ chainId: args.chainId }) ?? getProvider({ chainId: args.chainId });\r\n  if (args.listen)\r\n    createListener(provider_);\r\n  let active = true;\r\n  const client2 = getClient();\r\n  const unsubscribe = client2.subscribe(\r\n    ({ provider, webSocketProvider }) => ({ provider, webSocketProvider }),\r\n    async ({ provider, webSocketProvider }) => {\r\n      const provider_2 = webSocketProvider ?? provider;\r\n      if (args.listen && !args.chainId && provider_2) {\r\n        createListener(provider_2);\r\n      }\r\n      const blockNumber = await fetchBlockNumber({ chainId: args.chainId });\r\n      if (!active)\r\n        return;\r\n      callback(blockNumber);\r\n    },\r\n    {\r\n      equalityFn: shallow2\r\n    }\r\n  );\r\n  return () => {\r\n    active = false;\r\n    unsubscribe();\r\n    provider_?.off(\"block\", debouncedCallback);\r\n    previousProvider?.off(\"block\", debouncedCallback);\r\n  };\r\n}\r\n\r\n// src/actions/contracts/watchMulticall.ts\r\nfunction watchMulticall(config, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(await multicall(config));\r\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\r\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\r\n  return () => {\r\n    unsubscribe();\r\n    unwatch?.();\r\n  };\r\n}\r\n\r\n// src/actions/contracts/watchReadContract.ts\r\nfunction watchReadContract(config, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(await readContract(config));\r\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\r\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\r\n  return () => {\r\n    unsubscribe();\r\n    unwatch?.();\r\n  };\r\n}\r\n\r\n// src/actions/contracts/watchReadContracts.ts\r\nfunction watchReadContracts(config, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(await readContracts(config));\r\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\r\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\r\n  return () => {\r\n    unsubscribe();\r\n    unwatch?.();\r\n  };\r\n}\r\n\r\n// src/actions/transactions/fetchTransaction.ts\r\nasync function fetchTransaction({\r\n  chainId,\r\n  hash\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  return provider.getTransaction(hash);\r\n}\r\n\r\n// src/actions/transactions/prepareSendTransaction.ts\r\nimport { isAddress as isAddress2 } from \"ethers/lib/utils.js\";\r\n\r\n// src/actions/ens/fetchEnsAddress.ts\r\nimport { getAddress } from \"ethers/lib/utils.js\";\r\nasync function fetchEnsAddress({\r\n  chainId,\r\n  name\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const address = await provider.resolveName(name);\r\n  try {\r\n    return address ? getAddress(address) : null;\r\n  } catch (_error) {\r\n    return null;\r\n  }\r\n}\r\n\r\n// src/actions/ens/fetchEnsAvatar.ts\r\nasync function fetchEnsAvatar({\r\n  address,\r\n  chainId\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const avatar = await provider.getAvatar(address);\r\n  return avatar;\r\n}\r\n\r\n// src/actions/ens/fetchEnsName.ts\r\nimport { getAddress as getAddress2 } from \"ethers/lib/utils.js\";\r\nasync function fetchEnsName({\r\n  address,\r\n  chainId\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  return provider.lookupAddress(getAddress2(address));\r\n}\r\n\r\n// src/actions/ens/fetchEnsResolver.ts\r\nasync function fetchEnsResolver({\r\n  chainId,\r\n  name\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const resolver = await provider.getResolver(name);\r\n  return resolver;\r\n}\r\n\r\n// src/actions/transactions/prepareSendTransaction.ts\r\nasync function prepareSendTransaction({\r\n  chainId,\r\n  request,\r\n  signer: signer_\r\n}) {\r\n  const signer = signer_ ?? await fetchSigner({ chainId });\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  if (chainId)\r\n    assertActiveChain({ chainId, signer });\r\n  const [to, gasLimit] = await Promise.all([\r\n    isAddress2(request.to) ? Promise.resolve(request.to) : fetchEnsAddress({ name: request.to }),\r\n    request.gasLimit ? Promise.resolve(request.gasLimit) : signer.estimateGas(request)\r\n  ]);\r\n  if (!to)\r\n    throw new Error(\"Could not resolve ENS name\");\r\n  return {\r\n    ...chainId ? { chainId } : {},\r\n    request: { ...request, gasLimit, to },\r\n    mode: \"prepared\"\r\n  };\r\n}\r\n\r\n// src/actions/transactions/sendTransaction.ts\r\nasync function sendTransaction({\r\n  chainId,\r\n  mode,\r\n  request\r\n}) {\r\n  const signer = await fetchSigner();\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  if (mode === \"prepared\") {\r\n    if (!request.gasLimit)\r\n      throw new Error(\"`gasLimit` is required\");\r\n    if (!request.to)\r\n      throw new Error(\"`to` is required\");\r\n  }\r\n  if (chainId)\r\n    assertActiveChain({ chainId, signer });\r\n  try {\r\n    const uncheckedSigner = signer.connectUnchecked?.();\r\n    const { hash, wait } = await (uncheckedSigner ?? signer).sendTransaction(\r\n      request\r\n    );\r\n    return { hash, wait };\r\n  } catch (error) {\r\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\")\r\n      throw new UserRejectedRequestError(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// src/actions/transactions/waitForTransaction.ts\r\nimport { toUtf8String } from \"ethers/lib/utils.js\";\r\n\r\n// src/actions/network-status/fetchFeeData.ts\r\nimport { formatUnits as formatUnits2 } from \"ethers/lib/utils.js\";\r\nasync function fetchFeeData({\r\n  chainId,\r\n  formatUnits: units2 = \"wei\"\r\n} = {}) {\r\n  const provider = getProvider({ chainId });\r\n  const feeData = await provider.getFeeData();\r\n  const formatted = {\r\n    gasPrice: feeData.gasPrice ? formatUnits2(feeData.gasPrice, units2) : null,\r\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits2(feeData.maxFeePerGas, units2) : null,\r\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits2(feeData.maxPriorityFeePerGas, units2) : null\r\n  };\r\n  return { ...feeData, formatted };\r\n}\r\n\r\n// src/actions/transactions/waitForTransaction.ts\r\nasync function waitForTransaction({\r\n  chainId,\r\n  confirmations = 1,\r\n  hash,\r\n  onSpeedUp,\r\n  timeout = 0\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const [blockNumber, transaction] = await Promise.all([\r\n    fetchBlockNumber(),\r\n    fetchTransaction({ hash })\r\n  ]);\r\n  let replaceable = null;\r\n  if (confirmations !== 0 && transaction?.to) {\r\n    replaceable = {\r\n      data: transaction.data,\r\n      from: transaction.from,\r\n      nonce: transaction.nonce,\r\n      startBlock: blockNumber,\r\n      to: transaction.to,\r\n      value: transaction.value\r\n    };\r\n  }\r\n  try {\r\n    const receipt = await provider._waitForTransaction(\r\n      hash,\r\n      confirmations,\r\n      timeout,\r\n      replaceable\r\n    );\r\n    if (receipt.status === 0) {\r\n      const code = await provider.call(receipt, receipt.blockNumber);\r\n      const reason = toUtf8String(`0x${code.substring(138)}`);\r\n      throw new Error(reason);\r\n    }\r\n    return receipt;\r\n  } catch (err) {\r\n    if (err?.reason === \"repriced\") {\r\n      onSpeedUp?.(err.replacement);\r\n      return waitForTransaction({\r\n        hash: err.replacement?.hash,\r\n        confirmations,\r\n        timeout\r\n      });\r\n    }\r\n    throw err;\r\n  }\r\n}\r\n\r\n// src/actions/transactions/watchPendingTransactions.ts\r\nimport { shallow as shallow3 } from \"zustand/shallow\";\r\nfunction watchPendingTransactions(args, callback) {\r\n  let previousProvider;\r\n  const createListener = (provider) => {\r\n    if (previousProvider) {\r\n      previousProvider?.off(\"pending\", callback);\r\n    }\r\n    provider.on(\"pending\", callback);\r\n    previousProvider = provider;\r\n  };\r\n  const provider_ = getWebSocketProvider({ chainId: args.chainId }) ?? getProvider({ chainId: args.chainId });\r\n  createListener(provider_);\r\n  const client2 = getClient();\r\n  const unsubscribe = client2.subscribe(\r\n    ({ provider, webSocketProvider }) => ({ provider, webSocketProvider }),\r\n    async ({ provider, webSocketProvider }) => {\r\n      const provider_2 = webSocketProvider ?? provider;\r\n      if (!args.chainId && provider_2) {\r\n        createListener(provider_2);\r\n      }\r\n    },\r\n    {\r\n      equalityFn: shallow3\r\n    }\r\n  );\r\n  return () => {\r\n    unsubscribe();\r\n    provider_?.off(\"pending\", callback);\r\n    previousProvider?.off(\"pending\", callback);\r\n  };\r\n}\r\n\r\n// src/actions/contracts/writeContract.ts\r\nasync function writeContract({\r\n  address,\r\n  args,\r\n  chainId,\r\n  abi,\r\n  functionName,\r\n  mode,\r\n  overrides,\r\n  request: request_\r\n}) {\r\n  const signer = await fetchSigner();\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  if (chainId)\r\n    assertActiveChain({ chainId, signer });\r\n  if (mode === \"prepared\") {\r\n    if (!request_)\r\n      throw new Error(\"`request` is required\");\r\n  }\r\n  const request = mode === \"recklesslyUnprepared\" ? (await prepareWriteContract({\r\n    address,\r\n    args,\r\n    chainId,\r\n    abi,\r\n    functionName,\r\n    overrides\r\n  })).request : request_;\r\n  const transaction = await sendTransaction({\r\n    request,\r\n    mode: \"prepared\"\r\n  });\r\n  return transaction;\r\n}\r\n\r\n// src/actions/accounts/fetchBalance.ts\r\nasync function fetchBalance({\r\n  address,\r\n  chainId,\r\n  formatUnits: unit,\r\n  token\r\n}) {\r\n  const client2 = getClient();\r\n  const provider = getProvider({ chainId });\r\n  if (token) {\r\n    const fetchContractBalance = async ({ abi }) => {\r\n      const erc20Config = { abi, address: token, chainId };\r\n      const [value2, decimals, symbol] = await readContracts({\r\n        allowFailure: false,\r\n        contracts: [\r\n          {\r\n            ...erc20Config,\r\n            functionName: \"balanceOf\",\r\n            args: [address]\r\n          },\r\n          { ...erc20Config, functionName: \"decimals\" },\r\n          { ...erc20Config, functionName: \"symbol\" }\r\n        ]\r\n      });\r\n      return {\r\n        decimals,\r\n        formatted: formatUnits3(value2 ?? \"0\", unit ?? decimals),\r\n        symbol,\r\n        value: value2\r\n      };\r\n    };\r\n    try {\r\n      return await fetchContractBalance({ abi: erc20ABI });\r\n    } catch (err) {\r\n      if (err instanceof ContractResultDecodeError) {\r\n        const { symbol, ...rest } = await fetchContractBalance({\r\n          abi: erc20ABI_bytes32\r\n        });\r\n        return {\r\n          symbol: parseBytes32String2(symbol),\r\n          ...rest\r\n        };\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  const chains = [...client2.provider.chains || [], ...client2.chains ?? []];\r\n  const value = await provider.getBalance(address);\r\n  const chain = chains.find((x) => x.id === provider.network.chainId);\r\n  return {\r\n    decimals: chain?.nativeCurrency.decimals ?? 18,\r\n    formatted: formatUnits3(value ?? \"0\", unit ?? \"ether\"),\r\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\r\n    value\r\n  };\r\n}\r\n\r\n// src/actions/accounts/fetchSigner.ts\r\nasync function fetchSigner({\r\n  chainId\r\n} = {}) {\r\n  const client2 = getClient();\r\n  const signer = await client2.connector?.getSigner?.({ chainId }) || null;\r\n  return signer;\r\n}\r\n\r\n// src/actions/accounts/getAccount.ts\r\nfunction getAccount() {\r\n  const { data, connector, status } = getClient();\r\n  switch (status) {\r\n    case \"connected\":\r\n      return {\r\n        address: data?.account,\r\n        connector,\r\n        isConnected: true,\r\n        isConnecting: false,\r\n        isDisconnected: false,\r\n        isReconnecting: false,\r\n        status\r\n      };\r\n    case \"reconnecting\":\r\n      return {\r\n        address: data?.account,\r\n        connector,\r\n        isConnected: !!data?.account,\r\n        isConnecting: false,\r\n        isDisconnected: false,\r\n        isReconnecting: true,\r\n        status\r\n      };\r\n    case \"connecting\":\r\n      return {\r\n        address: data?.account,\r\n        connector,\r\n        isConnected: false,\r\n        isConnecting: true,\r\n        isDisconnected: false,\r\n        isReconnecting: false,\r\n        status\r\n      };\r\n    case \"disconnected\":\r\n      return {\r\n        address: void 0,\r\n        connector: void 0,\r\n        isConnected: false,\r\n        isConnecting: false,\r\n        isDisconnected: true,\r\n        isReconnecting: false,\r\n        status\r\n      };\r\n  }\r\n}\r\n\r\n// src/actions/accounts/getNetwork.ts\r\nfunction getNetwork() {\r\n  const client2 = getClient();\r\n  const chainId = client2.data?.chain?.id;\r\n  const activeChains = client2.chains ?? [];\r\n  const activeChain = [...client2.provider.chains || [], ...activeChains].find(\r\n    (x) => x.id === chainId\r\n  ) ?? {\r\n    id: chainId,\r\n    name: `Chain ${chainId}`,\r\n    network: `${chainId}`,\r\n    nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\r\n    rpcUrls: {\r\n      default: { http: [\"\"] },\r\n      public: { http: [\"\"] }\r\n    }\r\n  };\r\n  return {\r\n    chain: chainId ? {\r\n      ...activeChain,\r\n      ...client2.data?.chain,\r\n      id: chainId\r\n    } : void 0,\r\n    chains: activeChains\r\n  };\r\n}\r\n\r\n// src/actions/accounts/signMessage.ts\r\nasync function signMessage(args) {\r\n  try {\r\n    const signer = await fetchSigner();\r\n    if (!signer)\r\n      throw new ConnectorNotFoundError();\r\n    return await signer.signMessage(\r\n      args.message\r\n    );\r\n  } catch (error) {\r\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\")\r\n      throw new UserRejectedRequestError(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// src/actions/accounts/signTypedData.ts\r\nasync function signTypedData({\r\n  domain,\r\n  types,\r\n  value\r\n}) {\r\n  const signer = await fetchSigner();\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  const { chainId: chainId_ } = domain;\r\n  const chainId = chainId_ ? normalizeChainId(chainId_) : void 0;\r\n  if (chainId)\r\n    assertActiveChain({ chainId, signer });\r\n  const types_ = Object.entries(types).filter(([key]) => key !== \"EIP712Domain\").reduce((types2, [key, attributes]) => {\r\n    types2[key] = attributes.filter((attr) => attr.type !== \"EIP712Domain\");\r\n    return types2;\r\n  }, {});\r\n  try {\r\n    return await signer._signTypedData(domain, types_, value);\r\n  } catch (error) {\r\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\")\r\n      throw new UserRejectedRequestError(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// src/actions/accounts/switchNetwork.ts\r\nasync function switchNetwork({\r\n  chainId\r\n}) {\r\n  const { connector } = getClient();\r\n  if (!connector)\r\n    throw new ConnectorNotFoundError();\r\n  if (!connector.switchChain)\r\n    throw new SwitchChainNotSupportedError({\r\n      connector\r\n    });\r\n  return connector.switchChain(chainId);\r\n}\r\n\r\n// src/actions/accounts/watchAccount.ts\r\nimport { shallow as shallow4 } from \"zustand/shallow\";\r\nfunction watchAccount(callback, { selector = (x) => x } = {}) {\r\n  const client2 = getClient();\r\n  const handleChange = () => callback(getAccount());\r\n  const unsubscribe = client2.subscribe(\r\n    ({ data, connector, status }) => selector({\r\n      address: data?.account,\r\n      connector,\r\n      status\r\n    }),\r\n    handleChange,\r\n    {\r\n      equalityFn: shallow4\r\n    }\r\n  );\r\n  return unsubscribe;\r\n}\r\n\r\n// src/actions/accounts/watchNetwork.ts\r\nimport { shallow as shallow5 } from \"zustand/shallow\";\r\nfunction watchNetwork(callback, { selector = (x) => x } = {}) {\r\n  const client2 = getClient();\r\n  const handleChange = () => callback(getNetwork());\r\n  const unsubscribe = client2.subscribe(\r\n    ({ data, chains }) => selector({ chainId: data?.chain?.id, chains }),\r\n    handleChange,\r\n    {\r\n      equalityFn: shallow5\r\n    }\r\n  );\r\n  return unsubscribe;\r\n}\r\n\r\n// src/actions/accounts/watchSigner.ts\r\nimport { shallow as shallow6 } from \"zustand/shallow\";\r\nfunction watchSigner({ chainId }, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => {\r\n    const signer = await fetchSigner({ chainId });\r\n    if (!getClient().connector)\r\n      return callback(null);\r\n    return callback(signer);\r\n  };\r\n  const unsubscribe = client2.subscribe(\r\n    ({ data, connector }) => ({\r\n      account: data?.account,\r\n      chainId: data?.chain?.id,\r\n      connector\r\n    }),\r\n    handleChange,\r\n    {\r\n      equalityFn: shallow6\r\n    }\r\n  );\r\n  return unsubscribe;\r\n}\r\n\r\n// src/errors.ts\r\nvar RpcError = class extends Error {\r\n  constructor(message, options) {\r\n    const { cause, code, data } = options;\r\n    if (!Number.isInteger(code))\r\n      throw new Error('\"code\" must be an integer.');\r\n    if (!message || typeof message !== \"string\")\r\n      throw new Error('\"message\" must be a nonempty string.');\r\n    super(message);\r\n    this.cause = cause;\r\n    this.code = code;\r\n    this.data = data;\r\n  }\r\n};\r\nvar ProviderRpcError = class extends RpcError {\r\n  constructor(message, options) {\r\n    const { cause, code, data } = options;\r\n    if (!(Number.isInteger(code) && code >= 1e3 && code <= 4999))\r\n      throw new Error(\r\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\r\n      );\r\n    super(message, { cause, code, data });\r\n  }\r\n};\r\nvar AddChainError = class extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.name = \"AddChainError\";\r\n    this.message = \"Error adding chain\";\r\n  }\r\n};\r\nvar ChainDoesNotSupportMulticallError = class extends Error {\r\n  constructor({ blockNumber, chain }) {\r\n    super(\r\n      `Chain \"${chain.name}\" does not support multicall${blockNumber ? ` on block ${blockNumber}` : \"\"}.`\r\n    );\r\n    this.name = \"ChainDoesNotSupportMulticall\";\r\n  }\r\n};\r\nvar ChainMismatchError = class extends Error {\r\n  constructor({\r\n    activeChain,\r\n    targetChain\r\n  }) {\r\n    super(\r\n      `Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`\r\n    );\r\n    this.name = \"ChainMismatchError\";\r\n  }\r\n};\r\nvar ChainNotConfiguredError = class extends Error {\r\n  constructor({\r\n    chainId,\r\n    connectorId\r\n  }) {\r\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\r\n    this.name = \"ChainNotConfigured\";\r\n  }\r\n};\r\nvar ConnectorAlreadyConnectedError = class extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.name = \"ConnectorAlreadyConnectedError\";\r\n    this.message = \"Connector already connected\";\r\n  }\r\n};\r\nvar ConnectorNotFoundError = class extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.name = \"ConnectorNotFoundError\";\r\n    this.message = \"Connector not found\";\r\n  }\r\n};\r\nvar ContractMethodDoesNotExistError = class extends Error {\r\n  constructor({\r\n    address,\r\n    chainId,\r\n    functionName\r\n  }) {\r\n    const { chains, network } = getProvider();\r\n    const chain = chains?.find(({ id }) => id === (chainId || network.chainId));\r\n    const blockExplorer = chain?.blockExplorers?.default;\r\n    super(\r\n      [\r\n        `Function \"${functionName}\" on contract \"${address}\" does not exist.`,\r\n        ...blockExplorer ? [\r\n          \"\",\r\n          `${blockExplorer?.name}: ${blockExplorer?.url}/address/${address}#readContract`\r\n        ] : []\r\n      ].join(\"\\n\")\r\n    );\r\n    this.name = \"ContractMethodDoesNotExistError\";\r\n  }\r\n};\r\nvar ContractMethodNoResultError = class extends Error {\r\n  constructor({\r\n    address,\r\n    args,\r\n    chainId,\r\n    functionName\r\n  }) {\r\n    super(\r\n      [\r\n        \"Contract read returned an empty response. This could be due to any of the following:\",\r\n        `- The contract does not have the function \"${functionName}\",`,\r\n        \"- The parameters passed to the contract function may be invalid, or\",\r\n        \"- The address is not a contract.\",\r\n        \"\",\r\n        `Config:`,\r\n        JSON.stringify(\r\n          {\r\n            address,\r\n            abi: \"...\",\r\n            functionName,\r\n            chainId,\r\n            args\r\n          },\r\n          null,\r\n          2\r\n        )\r\n      ].join(\"\\n\")\r\n    );\r\n    this.name = \"ContractMethodNoResultError\";\r\n  }\r\n};\r\nvar ContractMethodRevertedError = class extends Error {\r\n  constructor({\r\n    address,\r\n    args,\r\n    chainId,\r\n    functionName,\r\n    errorMessage\r\n  }) {\r\n    super(\r\n      [\r\n        \"Contract method reverted with an error.\",\r\n        \"\",\r\n        `Config:`,\r\n        JSON.stringify(\r\n          {\r\n            address,\r\n            abi: \"...\",\r\n            functionName,\r\n            chainId,\r\n            args\r\n          },\r\n          null,\r\n          2\r\n        ),\r\n        \"\",\r\n        `Details: ${errorMessage}`\r\n      ].join(\"\\n\")\r\n    );\r\n    this.name = \"ContractMethodRevertedError\";\r\n  }\r\n};\r\nvar ContractResultDecodeError = class extends Error {\r\n  constructor({\r\n    address,\r\n    args,\r\n    chainId,\r\n    functionName,\r\n    errorMessage\r\n  }) {\r\n    super(\r\n      [\r\n        \"Failed to decode contract function result.\",\r\n        \"\",\r\n        `Config:`,\r\n        JSON.stringify(\r\n          {\r\n            address,\r\n            abi: \"...\",\r\n            functionName,\r\n            chainId,\r\n            args\r\n          },\r\n          null,\r\n          2\r\n        ),\r\n        \"\",\r\n        `Details: ${errorMessage}`\r\n      ].join(\"\\n\")\r\n    );\r\n    this.name = \"ContractResultDecodeError\";\r\n  }\r\n};\r\nvar ProviderChainsNotFound = class extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.name = \"ProviderChainsNotFound\";\r\n    this.message = [\r\n      \"No chains were found on the wagmi provider. Some functions that require a chain may not work.\",\r\n      \"\",\r\n      \"It is recommended to add a list of chains to the provider in `createClient`.\",\r\n      \"\",\r\n      \"Example:\",\r\n      \"\",\r\n      \"```\",\r\n      \"import { getDefaultProvider } from 'ethers'\",\r\n      \"import { chain, createClient } from 'wagmi'\",\r\n      \"\",\r\n      \"createClient({\",\r\n      \"  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })\",\r\n      \"})\",\r\n      \"```\"\r\n    ].join(\"\\n\");\r\n  }\r\n};\r\nvar ResourceUnavailableError = class extends RpcError {\r\n  constructor(cause) {\r\n    super(\"Resource unavailable\", { cause, code: -32002 });\r\n    this.name = \"ResourceUnavailable\";\r\n  }\r\n};\r\nvar SwitchChainError = class extends ProviderRpcError {\r\n  constructor(cause) {\r\n    super(\"Error switching chain\", { cause, code: 4902 });\r\n    this.name = \"SwitchChainError\";\r\n  }\r\n};\r\nvar SwitchChainNotSupportedError = class extends Error {\r\n  constructor({ connector }) {\r\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\r\n    this.name = \"SwitchChainNotSupportedError\";\r\n  }\r\n};\r\nvar UserRejectedRequestError = class extends ProviderRpcError {\r\n  constructor(cause) {\r\n    super(\"User rejected request\", { cause, code: 4001 });\r\n    this.name = \"UserRejectedRequestError\";\r\n  }\r\n};\r\n\r\nexport {\r\n  configureChains,\r\n  RpcError,\r\n  ProviderRpcError,\r\n  AddChainError,\r\n  ChainDoesNotSupportMulticallError,\r\n  ChainMismatchError,\r\n  ChainNotConfiguredError,\r\n  ConnectorAlreadyConnectedError,\r\n  ConnectorNotFoundError,\r\n  ContractMethodDoesNotExistError,\r\n  ContractMethodNoResultError,\r\n  ContractMethodRevertedError,\r\n  ContractResultDecodeError,\r\n  ProviderChainsNotFound,\r\n  ResourceUnavailableError,\r\n  SwitchChainError,\r\n  SwitchChainNotSupportedError,\r\n  UserRejectedRequestError,\r\n  debounce,\r\n  deepEqual,\r\n  deserialize,\r\n  minimizeContractInterface,\r\n  normalizeChainId,\r\n  parseContractResult,\r\n  serialize,\r\n  noopStorage,\r\n  createStorage,\r\n  Client,\r\n  createClient,\r\n  getClient,\r\n  connect,\r\n  disconnect,\r\n  erc20ABI,\r\n  erc721ABI,\r\n  erc4626ABI,\r\n  units,\r\n  fetchToken,\r\n  getContract,\r\n  prepareWriteContract,\r\n  getProvider,\r\n  getWebSocketProvider,\r\n  watchProvider,\r\n  watchWebSocketProvider,\r\n  multicall,\r\n  readContract,\r\n  readContracts,\r\n  watchContractEvent,\r\n  fetchBlockNumber,\r\n  watchBlockNumber,\r\n  watchMulticall,\r\n  watchReadContract,\r\n  watchReadContracts,\r\n  fetchTransaction,\r\n  fetchEnsAddress,\r\n  fetchEnsAvatar,\r\n  fetchEnsName,\r\n  fetchEnsResolver,\r\n  prepareSendTransaction,\r\n  sendTransaction,\r\n  fetchFeeData,\r\n  waitForTransaction,\r\n  watchPendingTransactions,\r\n  writeContract,\r\n  fetchBalance,\r\n  fetchSigner,\r\n  getAccount,\r\n  getNetwork,\r\n  signMessage,\r\n  signTypedData,\r\n  switchNetwork,\r\n  watchAccount,\r\n  watchNetwork,\r\n  watchSigner\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}