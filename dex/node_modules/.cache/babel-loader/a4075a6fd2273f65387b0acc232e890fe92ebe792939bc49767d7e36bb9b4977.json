{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _VisitorBase_childVisitorKeys, _VisitorBase_visitChildrenEvenIfSelectorExists;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VisitorBase = void 0;\nconst visitor_keys_1 = require(\"@typescript-eslint/visitor-keys\");\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj != null;\n}\nfunction isNode(node) {\n  return isObject(node) && typeof node.type === 'string';\n}\nclass VisitorBase {\n  constructor(options) {\n    var _a, _b;\n    _VisitorBase_childVisitorKeys.set(this, void 0);\n    _VisitorBase_visitChildrenEvenIfSelectorExists.set(this, void 0);\n    __classPrivateFieldSet(this, _VisitorBase_childVisitorKeys, (_a = options.childVisitorKeys) !== null && _a !== void 0 ? _a : visitor_keys_1.visitorKeys, \"f\");\n    __classPrivateFieldSet(this, _VisitorBase_visitChildrenEvenIfSelectorExists, (_b = options.visitChildrenEvenIfSelectorExists) !== null && _b !== void 0 ? _b : false, \"f\");\n  }\n  /**\n   * Default method for visiting children.\n   * @param node the node whose children should be visited\n   * @param exclude a list of keys to not visit\n   */\n  visitChildren(node) {\n    let excludeArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var _a;\n    if (node == null || node.type == null) {\n      return;\n    }\n    const exclude = new Set(excludeArr.concat(['parent']));\n    const children = (_a = __classPrivateFieldGet(this, _VisitorBase_childVisitorKeys, \"f\")[node.type]) !== null && _a !== void 0 ? _a : Object.keys(node);\n    for (const key of children) {\n      if (exclude.has(key)) {\n        continue;\n      }\n      const child = node[key];\n      if (!child) {\n        continue;\n      }\n      if (Array.isArray(child)) {\n        for (const subChild of child) {\n          if (isNode(subChild)) {\n            this.visit(subChild);\n          }\n        }\n      } else if (isNode(child)) {\n        this.visit(child);\n      }\n    }\n  }\n  /**\n   * Dispatching node.\n   */\n  visit(node) {\n    if (node == null || node.type == null) {\n      return;\n    }\n    const visitor = this[node.type];\n    if (visitor) {\n      visitor.call(this, node);\n      if (!__classPrivateFieldGet(this, _VisitorBase_visitChildrenEvenIfSelectorExists, \"f\")) {\n        return;\n      }\n    }\n    this.visitChildren(node);\n  }\n}\nexports.VisitorBase = VisitorBase;\n_VisitorBase_childVisitorKeys = new WeakMap(), _VisitorBase_visitChildrenEvenIfSelectorExists = new WeakMap();","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AACA;AAOA,SAASA,QAAQA,CAACC,GAAY;EAC5B,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,IAAI,IAAI;AAC/C;AACA,SAASC,MAAMA,CAACC,IAAa;EAC3B,OAAOH,QAAQ,CAACG,IAAI,CAAC,IAAI,OAAOA,IAAI,CAACC,IAAI,KAAK,QAAQ;AACxD;AAMA,MAAeC,WAAW;EAGxBC,YAAYC,OAAuB;;IAF1BC;IACAC;IAEPC,2BAAI,iCAAqB,aAAO,CAACC,gBAAgB,mCAAIC,0BAAW;IAChEF,2BAAI,kDACF,aAAO,CAACG,iCAAiC,mCAAI,KAAK;EACtD;EAEA;;;;;EAKAC,aAAaA,CACXX,IAA0B,EACE;IAAA,IAA5BY,iFAA0B,EAAE;;IAE5B,IAAIZ,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACC,IAAI,IAAI,IAAI,EAAE;MACrC;;IAGF,MAAMY,OAAO,GAAG,IAAIC,GAAG,CAACF,UAAU,CAACG,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAgB;IACrE,MAAMC,QAAQ,GAAG,iCAAI,qCAAkB,CAAChB,IAAI,CAACC,IAAI,CAAC,mCAAIgB,MAAM,CAACC,IAAI,CAAClB,IAAI,CAAC;IACvE,KAAK,MAAMmB,GAAG,IAAIH,QAAQ,EAAE;MAC1B,IAAIH,OAAO,CAACO,GAAG,CAACD,GAAG,CAAC,EAAE;QACpB;;MAGF,MAAME,KAAK,GAAGrB,IAAI,CAACmB,GAA0B,CAAY;MACzD,IAAI,CAACE,KAAK,EAAE;QACV;;MAGF,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;QACxB,KAAK,MAAMG,QAAQ,IAAIH,KAAK,EAAE;UAC5B,IAAItB,MAAM,CAACyB,QAAQ,CAAC,EAAE;YACpB,IAAI,CAACC,KAAK,CAACD,QAAQ,CAAC;;;OAGzB,MAAM,IAAIzB,MAAM,CAACsB,KAAK,CAAC,EAAE;QACxB,IAAI,CAACI,KAAK,CAACJ,KAAK,CAAC;;;EAGvB;EAEA;;;EAGAI,KAAKA,CAACzB,IAAsC;IAC1C,IAAIA,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACC,IAAI,IAAI,IAAI,EAAE;MACrC;;IAGF,MAAMyB,OAAO,GAAI,IAAoB,CAAC1B,IAAI,CAACC,IAAI,CAAC;IAChD,IAAIyB,OAAO,EAAE;MACXA,OAAO,CAACC,IAAI,CAAC,IAAI,EAAE3B,IAAI,CAAC;MACxB,IAAI,CAAC4B,2BAAI,sDAAmC,EAAE;QAC5C;;;IAIJ,IAAI,CAACjB,aAAa,CAACX,IAAI,CAAC;EAC1B;;AAGO6B","names":["isObject","obj","isNode","node","type","VisitorBase","constructor","options","_VisitorBase_childVisitorKeys","_VisitorBase_visitChildrenEvenIfSelectorExists","__classPrivateFieldSet","childVisitorKeys","visitor_keys_1","visitChildrenEvenIfSelectorExists","visitChildren","excludeArr","exclude","Set","concat","children","Object","keys","key","has","child","Array","isArray","subChild","visit","visitor","call","__classPrivateFieldGet","exports"],"sources":["../../src/referencer/VisitorBase.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}