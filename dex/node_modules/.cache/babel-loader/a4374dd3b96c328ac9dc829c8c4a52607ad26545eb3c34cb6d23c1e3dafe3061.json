{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FunctionScope = void 0;\nconst types_1 = require(\"@typescript-eslint/types\");\nconst ScopeBase_1 = require(\"./ScopeBase\");\nconst ScopeType_1 = require(\"./ScopeType\");\nclass FunctionScope extends ScopeBase_1.ScopeBase {\n  constructor(scopeManager, upperScope, block, isMethodDefinition) {\n    super(scopeManager, ScopeType_1.ScopeType.function, upperScope, block, isMethodDefinition);\n    // section 9.2.13, FunctionDeclarationInstantiation.\n    // NOTE Arrow functions never have an arguments objects.\n    if (this.block.type !== types_1.AST_NODE_TYPES.ArrowFunctionExpression) {\n      this.defineVariable('arguments', this.set, this.variables, null, null);\n    }\n  }\n  // References in default parameters isn't resolved to variables which are in their function body.\n  //     const x = 1\n  //     function f(a = x) { // This `x` is resolved to the `x` in the outer scope.\n  //         const x = 2\n  //         console.log(a)\n  //     }\n  isValidResolution(ref, variable) {\n    var _a, _b;\n    // If `options.globalReturn` is true, `this.block` becomes a Program node.\n    if (this.block.type === types_1.AST_NODE_TYPES.Program) {\n      return true;\n    }\n    const bodyStart = (_b = (_a = this.block.body) === null || _a === void 0 ? void 0 : _a.range[0]) !== null && _b !== void 0 ? _b : -1;\n    // It's invalid resolution in the following case:\n    return !(variable.scope === this && ref.identifier.range[0] < bodyStart &&\n    // the reference is in the parameter part.\n    variable.defs.every(d => d.name.range[0] >= bodyStart) // the variable is in the body.\n    );\n  }\n}\nexports.FunctionScope = FunctionScope;","map":{"version":3,"mappings":";;;;;;AACA;AAMA;AACA;AAEA,MAAMA,aAAc,SAAQC,qBAS3B;EACCC,YACEC,YAA0B,EAC1BC,UAAkC,EAClCC,KAA6B,EAC7BC,kBAA2B;IAE3B,KAAK,CACHH,YAAY,EACZI,qBAAS,CAACC,QAAQ,EAClBJ,UAAU,EACVC,KAAK,EACLC,kBAAkB,CACnB;IAED;IACA;IACA,IAAI,IAAI,CAACD,KAAK,CAACI,IAAI,KAAKC,sBAAc,CAACC,uBAAuB,EAAE;MAC9D,IAAI,CAACC,cAAc,CAAC,WAAW,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC;;EAE1E;EAEA;EACA;EACA;EACA;EACA;EACA;EACUC,iBAAiBA,CAACC,GAAc,EAAEC,QAAkB;;IAC5D;IACA,IAAI,IAAI,CAACZ,KAAK,CAACI,IAAI,KAAKC,sBAAc,CAACQ,OAAO,EAAE;MAC9C,OAAO,IAAI;;IAGb,MAAMC,SAAS,GAAG,gBAAI,CAACd,KAAK,CAACe,IAAI,0CAAEC,KAAK,CAAC,CAAC,CAAC,mCAAI,CAAC,CAAC;IAEjD;IACA,OAAO,EAEHJ,QAAQ,CAACK,KAAK,KAAK,IAAI,IACvBN,GAAG,CAACO,UAAU,CAACF,KAAK,CAAC,CAAC,CAAC,GAAGF,SAAS;IAAI;IACvCF,QAAQ,CAACO,IAAI,CAACC,KAAK,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,IAAIF,SAAS,CAAC,CACtD;IAAA,CACH;EACH;;AAGOS","names":["FunctionScope","ScopeBase_1","constructor","scopeManager","upperScope","block","isMethodDefinition","ScopeType_1","function","type","types_1","ArrowFunctionExpression","defineVariable","set","variables","isValidResolution","ref","variable","Program","bodyStart","body","range","scope","identifier","defs","every","d","name","exports"],"sources":["../../src/scope/FunctionScope.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}