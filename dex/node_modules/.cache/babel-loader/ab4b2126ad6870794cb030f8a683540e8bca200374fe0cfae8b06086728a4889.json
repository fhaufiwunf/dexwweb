{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUniqueESSymbolType = exports.isUnionType = exports.isUnionOrIntersectionType = exports.isTypeVariable = exports.isTypeReference = exports.isTypeParameter = exports.isSubstitutionType = exports.isObjectType = exports.isLiteralType = exports.isIntersectionType = exports.isInterfaceType = exports.isInstantiableType = exports.isIndexedAccessype = exports.isIndexedAccessType = exports.isGenericType = exports.isEnumType = exports.isConditionalType = void 0;\nconst ts = require(\"typescript\");\nfunction isConditionalType(type) {\n  return (type.flags & ts.TypeFlags.Conditional) !== 0;\n}\nexports.isConditionalType = isConditionalType;\nfunction isEnumType(type) {\n  return (type.flags & ts.TypeFlags.Enum) !== 0;\n}\nexports.isEnumType = isEnumType;\nfunction isGenericType(type) {\n  return (type.flags & ts.TypeFlags.Object) !== 0 && (type.objectFlags & ts.ObjectFlags.ClassOrInterface) !== 0 && (type.objectFlags & ts.ObjectFlags.Reference) !== 0;\n}\nexports.isGenericType = isGenericType;\nfunction isIndexedAccessType(type) {\n  return (type.flags & ts.TypeFlags.IndexedAccess) !== 0;\n}\nexports.isIndexedAccessType = isIndexedAccessType;\nfunction isIndexedAccessype(type) {\n  return (type.flags & ts.TypeFlags.Index) !== 0;\n}\nexports.isIndexedAccessype = isIndexedAccessype;\nfunction isInstantiableType(type) {\n  return (type.flags & ts.TypeFlags.Instantiable) !== 0;\n}\nexports.isInstantiableType = isInstantiableType;\nfunction isInterfaceType(type) {\n  return (type.flags & ts.TypeFlags.Object) !== 0 && (type.objectFlags & ts.ObjectFlags.ClassOrInterface) !== 0;\n}\nexports.isInterfaceType = isInterfaceType;\nfunction isIntersectionType(type) {\n  return (type.flags & ts.TypeFlags.Intersection) !== 0;\n}\nexports.isIntersectionType = isIntersectionType;\nfunction isLiteralType(type) {\n  return (type.flags & (ts.TypeFlags.StringOrNumberLiteral | ts.TypeFlags.BigIntLiteral)) !== 0;\n}\nexports.isLiteralType = isLiteralType;\nfunction isObjectType(type) {\n  return (type.flags & ts.TypeFlags.Object) !== 0;\n}\nexports.isObjectType = isObjectType;\nfunction isSubstitutionType(type) {\n  return (type.flags & ts.TypeFlags.Substitution) !== 0;\n}\nexports.isSubstitutionType = isSubstitutionType;\nfunction isTypeParameter(type) {\n  return (type.flags & ts.TypeFlags.TypeParameter) !== 0;\n}\nexports.isTypeParameter = isTypeParameter;\nfunction isTypeReference(type) {\n  return (type.flags & ts.TypeFlags.Object) !== 0 && (type.objectFlags & ts.ObjectFlags.Reference) !== 0;\n}\nexports.isTypeReference = isTypeReference;\nfunction isTypeVariable(type) {\n  return (type.flags & ts.TypeFlags.TypeVariable) !== 0;\n}\nexports.isTypeVariable = isTypeVariable;\nfunction isUnionOrIntersectionType(type) {\n  return (type.flags & ts.TypeFlags.UnionOrIntersection) !== 0;\n}\nexports.isUnionOrIntersectionType = isUnionOrIntersectionType;\nfunction isUnionType(type) {\n  return (type.flags & ts.TypeFlags.Union) !== 0;\n}\nexports.isUnionType = isUnionType;\nfunction isUniqueESSymbolType(type) {\n  return (type.flags & ts.TypeFlags.UniqueESSymbol) !== 0;\n}\nexports.isUniqueESSymbolType = isUniqueESSymbolType;","map":{"version":3,"mappings":"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","names":["isConditionalType","type","flags","ts","TypeFlags","Conditional","exports","isEnumType","Enum","isGenericType","Object","objectFlags","ObjectFlags","ClassOrInterface","Reference","isIndexedAccessType","IndexedAccess","isIndexedAccessype","Index","isInstantiableType","Instantiable","isInterfaceType","isIntersectionType","Intersection","isLiteralType","StringOrNumberLiteral","BigIntLiteral","isObjectType","isSubstitutionType","Substitution","isTypeParameter","TypeParameter","isTypeReference","isTypeVariable","TypeVariable","isUnionOrIntersectionType","UnionOrIntersection","isUnionType","Union","isUniqueESSymbolType","UniqueESSymbol"],"sources":["type.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}