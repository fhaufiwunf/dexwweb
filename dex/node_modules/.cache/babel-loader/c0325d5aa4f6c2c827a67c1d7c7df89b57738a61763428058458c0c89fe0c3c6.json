{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIsolatedProgram = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst ts = __importStar(require(\"typescript\"));\nconst getScriptKind_1 = require(\"./getScriptKind\");\nconst shared_1 = require(\"./shared\");\nconst log = (0, debug_1.default)('typescript-eslint:typescript-estree:createIsolatedProgram');\n/**\n * @param code The code of the file being linted\n * @returns Returns a new source file and program corresponding to the linted code\n */\nfunction createIsolatedProgram(parseSettings) {\n  log('Getting isolated program in %s mode for: %s', parseSettings.jsx ? 'TSX' : 'TS', parseSettings.filePath);\n  const compilerHost = {\n    fileExists() {\n      return true;\n    },\n    getCanonicalFileName() {\n      return parseSettings.filePath;\n    },\n    getCurrentDirectory() {\n      return '';\n    },\n    getDirectories() {\n      return [];\n    },\n    getDefaultLibFileName() {\n      return 'lib.d.ts';\n    },\n    // TODO: Support Windows CRLF\n    getNewLine() {\n      return '\\n';\n    },\n    getSourceFile(filename) {\n      return ts.createSourceFile(filename, parseSettings.code, ts.ScriptTarget.Latest, /* setParentNodes */true, (0, getScriptKind_1.getScriptKind)(parseSettings.filePath, parseSettings.jsx));\n    },\n    readFile() {\n      return undefined;\n    },\n    useCaseSensitiveFileNames() {\n      return true;\n    },\n    writeFile() {\n      return null;\n    }\n  };\n  const program = ts.createProgram([parseSettings.filePath], Object.assign({\n    noResolve: true,\n    target: ts.ScriptTarget.Latest,\n    jsx: parseSettings.jsx ? ts.JsxEmit.Preserve : undefined\n  }, (0, shared_1.createDefaultCompilerOptionsFromExtra)(parseSettings)), compilerHost);\n  const ast = program.getSourceFile(parseSettings.filePath);\n  if (!ast) {\n    throw new Error('Expected an ast to be returned for the single-file isolated program.');\n  }\n  return {\n    ast,\n    program\n  };\n}\nexports.createIsolatedProgram = createIsolatedProgram;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AAEA,MAAMA,GAAG,GAAG,mBAAK,EAAC,2DAA2D,CAAC;AAE9E;;;;AAIA,SAASC,qBAAqBA,CAACC,aAA4B;EACzDF,GAAG,CACD,6CAA6C,EAC7CE,aAAa,CAACC,GAAG,GAAG,KAAK,GAAG,IAAI,EAChCD,aAAa,CAACE,QAAQ,CACvB;EAED,MAAMC,YAAY,GAAoB;IACpCC,UAAUA;MACR,OAAO,IAAI;IACb,CAAC;IACDC,oBAAoBA;MAClB,OAAOL,aAAa,CAACE,QAAQ;IAC/B,CAAC;IACDI,mBAAmBA;MACjB,OAAO,EAAE;IACX,CAAC;IACDC,cAAcA;MACZ,OAAO,EAAE;IACX,CAAC;IACDC,qBAAqBA;MACnB,OAAO,UAAU;IACnB,CAAC;IAED;IACAC,UAAUA;MACR,OAAO,IAAI;IACb,CAAC;IACDC,aAAaA,CAACC,QAAgB;MAC5B,OAAOC,EAAE,CAACC,gBAAgB,CACxBF,QAAQ,EACRX,aAAa,CAACc,IAAI,EAClBF,EAAE,CAACG,YAAY,CAACC,MAAM,EACtB,oBAAqB,IAAI,EACzB,iCAAa,EAAChB,aAAa,CAACE,QAAQ,EAAEF,aAAa,CAACC,GAAG,CAAC,CACzD;IACH,CAAC;IACDgB,QAAQA;MACN,OAAOC,SAAS;IAClB,CAAC;IACDC,yBAAyBA;MACvB,OAAO,IAAI;IACb,CAAC;IACDC,SAASA;MACP,OAAO,IAAI;IACb;GACD;EAED,MAAMC,OAAO,GAAGT,EAAE,CAACU,aAAa,CAC9B,CAACtB,aAAa,CAACE,QAAQ,CAAC;IAEtBqB,SAAS,EAAE,IAAI;IACfC,MAAM,EAAEZ,EAAE,CAACG,YAAY,CAACC,MAAM;IAC9Bf,GAAG,EAAED,aAAa,CAACC,GAAG,GAAGW,EAAE,CAACa,OAAO,CAACC,QAAQ,GAAGR;EAAS,GACrD,kDAAqC,EAAClB,aAAa,CAAC,GAEzDG,YAAY,CACb;EAED,MAAMwB,GAAG,GAAGN,OAAO,CAACX,aAAa,CAACV,aAAa,CAACE,QAAQ,CAAC;EACzD,IAAI,CAACyB,GAAG,EAAE;IACR,MAAM,IAAIC,KAAK,CACb,sEAAsE,CACvE;;EAGH,OAAO;IAAED,GAAG;IAAEN;EAAO,CAAE;AACzB;AAESQ","names":["log","createIsolatedProgram","parseSettings","jsx","filePath","compilerHost","fileExists","getCanonicalFileName","getCurrentDirectory","getDirectories","getDefaultLibFileName","getNewLine","getSourceFile","filename","ts","createSourceFile","code","ScriptTarget","Latest","readFile","undefined","useCaseSensitiveFileNames","writeFile","program","createProgram","noResolve","target","JsxEmit","Preserve","ast","Error","exports"],"sources":["../../src/create-program/createIsolatedProgram.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}